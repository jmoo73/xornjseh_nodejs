{"version":3,"sources":["components/UI/Button/RoundButton.module.css","components/WeeklyData/Cell/Cell.module.css","components/UI/Button/SquareButton.module.css","components/CheckIn/PersonalData/Calendar/Calendar.module.css","components/CheckIn/PersonalData/PersonalData.module.css","components/ClassBar/ClassBar.module.css","containers/DailyLog/Dailylog.module.css","containers/Updatemember/Updatemember.module.css","components/Updatemember/AddNewMember/AddNewMember.module.css","components/WeeklyData/WeeklyLogTableTable.module.css","components/UI/Input/Input.module.css","components/CheckIn/NameSelect/NameSelect.module.css","components/UI/Button/Button.module.css","components/CheckIn/SmallClassButton/SmallClassButton.module.css","components/Navigation/Dropdown/Dropdown.module.css","components/UI/Spinner/Spinner.module.css","containers/Home/AuthHome.module.css","components/CheckIn/CheckIn.module.css","components/CheckIn/WelcomeToClass/WelcomeToClass.module.css","components/ChooseColor/ChooseColor.module.css","components/Attender/Attender.module.css","components/UI/Line/Line.module.css","components/Updatemember/UpdateBeltColor/ShowChosenNames/ShowChosenNames.module.css","components/Updatemember/UpdateBeltColor/UpdateBeltColor.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/Toolbar/Toolbar.module.css","containers/Home/Home.module.css","components/UI/Spinner/spinner2.gif","components/UI/BackDrop/BackDropBlack.module.css","components/CheckIn/BeltSelect/BeltSelect.module.css","components/ClassBar/DayBar/DayBar.module.css","containers/Auth/Auth.module.css","components/UI/Loader/Loader.module.css","components/MembersWithBelt/MembersWithBelt.module.css","components/UI/Modal/Modal.module.css","components/UI/BackDrop/BackDrop.module.css","components/UI/Modal/ModalTransparent.module.css","components/Updatemember/UpdateBeltColor/ChooseBeltColor/ChooseBeltColor.module.css","components/Updatemember/UpdateBeltColor/ChooseNames/ChooseNames.module.css","components/Navigation/Dropdown/ToggleButton.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","containers/Home/Home.js","components/UI/Spinner/Spinner.js","shared/axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","shared/refData.js","store/actions/ggl.js","store/actions/stats.js","components/UI/Button/SquareButton.js","components/UI/BackDrop/BackDropBlack.js","components/CheckIn/WelcomeToClass/WelcomeToClass.js","components/UI/Button/RoundButton.js","components/UI/Button/Button.js","components/CheckIn/NameSelect/NameSelect.js","components/CheckIn/BeltSelect/BeltSelect.js","components/CheckIn/SmallClassButton/SmallClassButton.js","components/CheckIn/PersonalData/Calendar/Calendar.js","components/CheckIn/PersonalData/PersonalData.js","components/ClassBar/DayBar/DayBar.js","components/CheckIn/CheckIn.js","containers/Home/AuthHome.js","shared/utility.js","components/UI/Input/Input.js","containers/Auth/Auth.js","components/UI/Loader/Loader.js","components/ClassBar/ClassBar.js","components/MembersWithBelt/MembersWithBelt.js","components/ChooseColor/ChooseColor.js","components/Attender/Attender.js","components/UI/BackDrop/BackDrop.js","components/UI/Modal/Modal.js","components/UI/Modal/ModalTransparent.js","components/UI/Line/Line.js","containers/DailyLog/Dailylog.js","components/WeeklyData/Cell/Cell.js","components/WeeklyData/WeeklyLogTableTable.js","containers/Weeklylog/Weeklylog.js","components/Updatemember/AddNewMember/AddNewMember.js","components/Updatemember/UpdateBeltColor/ChooseBeltColor/ChooseBeltColor.js","components/Updatemember/UpdateBeltColor/ChooseNames/ChooseNames.js","components/Updatemember/UpdateBeltColor/ShowChosenNames/ShowChosenNames.js","components/Updatemember/UpdateBeltColor/UpdateBeltColor.js","containers/Updatemember/Updatemember.js","containers/Auth/Logout/Logout.js","components/Navigation/Dropdown/ToggleButton.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/Dropdown/Dropdown.js","hoc/Layout/Layout.js","App.js","store/reducers/stats.js","store/reducers/ggl.js","store/reducers/auth.js","store/store.js","index.js"],"names":["module","exports","Home","Fragment","className","classes","HomeWrapper","bGround","src","spinner","alt","pic","instance","axios","create","baseURL","process","authenSuccess","idToken","userId","email","type","authFail","error","days","sixDays","daysShort","sixDaysShort","colors","now","Date","thisYear","getFullYear","lastYear","day","getDay","today","date","getMonth","getDate","start","diff","ind","Math","floor","indLast","slice","concat","countDays","year","makeDayArray","result","yF","finish","push","setDate","makeDateString","current","gglLoadStart","gglLoadFinish","gglLoadSuccess","doc","whenClassClicked","cl","currClass","whenBeltClicked","belt","currBelt","whenMemberNameClicked","id","whenAttenderSubmitClicked","ggleID","statsGglID","locationID","dispatch","a","fetchGglDocs","axInstance","post","responseTable","data","classTable","classNameTable","classToday","responsePersons","persons","classAttender","updateActivity","currActivity","number","buildStats","dailyStat","keyList","SquareButton","props","classStr","squareButton","size","small","one","two","three","test","transparent","flat","join","onClick","clicked","children","backdropblack","show","BackdropBlack","WelcomeToClass","wrapper","text","cls","RoundButton","classPile","BeltButton","beltColor","chosen","BeltChosen","BeltButtonBig","NameChosen","makeBiggerButton","biggerButton","nameButtonBig","BtnPressed","Button","classList","btnType","showClicked","disabled","NameSelect","state","fullName","nameChosen","setState","attenderIdList","this","attender","map","per","members","personWrapper","person","key","includes","name","split","submitButton","buttonWrapper","renderClickedState","nameClicked","Component","BeltSelect","beltCollection","clr","beltClicked","nameSelect","beltState","SmallClassButton","smallClassButton","chosenClass","Calendar","month","week","red","calendar","item","howManyClasses","bBreakSparring","attendance","length","forEach","el","needDataFetch","contentWrapper","PersonalData","todayStartTest","startedOn","testedOn","personalAttendance","title","threeCalendars","whenSubmitClick","DayBar","whatday","CheckIn","isNameChosen","classState","fetchPersonalAttendance","lastYearGglID","whenSubmitClicked","classStateChange","logIn","checkInWrapper","dayBar","backToAuthHome","personalData","Spinner","saving","checkInScreen","goToCheckInScreen","dataLoaded","isAuthenticated","onStats","onGgl","whenNameClicked","gglSaving","loading","gglLoading","individualCheckIn","statsLoading","AuthHomeWrapper","BackDropBlack","connect","ggl","stats","auth","token","authLoading","actions","response","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","maxLength","isEmail","isNumeric","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","onChange","changed","options","option","displayValue","Input","Label","label","Auth","controls","placeholder","validation","valid","password","onChangeHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","onAuth","formElementsArray","config","form","formElement","loaing","errorMessage","message","authRedirect","to","authRedirectPath","onSubmit","authData","returnSecureToken","authSuccess","fetchSuccess","location","Loader","loader","ClassBar","index","buttonClass","clickedClass","spanInButton","activityList","activity","clsName","buttonPink","clickedActivity","undefined","classBarWrapper","classBars","MembersWithBelt","currClassAttender","membersWithABelt","ChooseColor","beltList","optColor","clickedBelt","clickedMember","Attender","attenders","clickedAttender","buttonMain","clickedSubmit","style","fontSize","color","attenderBox","backdrop","Backdrop","Modal","transform","opacity","ModalTransparent","Line","LineWrapper","Dailylog","whenActivityClicked","changeState","clickedActivitySubmit","activitySaving","statsSaving","classSaving","classBar","showChooseColor","showAttender","clickedAttenderSubmit","showForm","formWrapper","formBox","labelBox","inputBox","autoComplete","submitBtn","dayLogBox","attenderTouched","alert","resetCurrClass","initActivity","currClassID","submitData","Cell","cellStyle","cellBase","titleCell","dataCell","headerCell","emptyCorner","activityCell","activityTitleCell","totalHeader","totalCell","sixDates","i","weekDates","WeeklyLogTable","dateRow","headerRow","rowWrapper","dataTable","statsTable","totalRow","sum","reduce","b","parseInt","tableWrapper","Weeklylog","WeeklyLogTableTable","AddNewMember","newMember","Name","Beltcolor","nameError","beltError","addToSheet","errorName","errorBelt","saveToSheet","resetButtons","StartedOn","onChangeName","e","onChoiceBelt","addMemberBox","layerOne","selBox","layerTwo","ChooseBeltColor","currBeltColor","biggerBox","ChooseNames","testeesID","testees","testee","beltGroup","membersWithBelt","ShowChosenNames","buttonBig","triggerSave","choiceBox","UpdateBeltColor","switchBeltColor","handleTestee","action","filter","each","saveTestee","whileSaving","BackDrop","updateWrapper","garoLineUpdate","Updatemember","left","right","opt","toggleButtons","LR","leftClass","leftButton","rightClass","rightButton","outerBox","buttonBox","isSaving","Logout","onLogOut","onLogOutGgl","onLogOutStat","ToggleButton","dropdownToggler","NavigationItem","link","exact","activeClassName","active","NavigationItems","items","isAuth","Toolbar","logo","fontWeight","DesktopOnly","Dropdown","attachedClasses","Close","open","dropdownCloser","Layout","showDropdown","prevState","App","routes","path","component","AuthHome","withRouter","initialState","statLoadStart","statLoadFinish","statLoadSuccess","statLogout","statSaveStart","statSaveFinish","resetActivity","whenActivitySubmitClicked","reducer","gglSaveStart","gglSaveFinish","gglLogout","attenderList","whenAttenderNameClicked","splice","currAttenderIdList","needGglUpdate","newAttClass","attClass","inList","inPerson","authStart","gglIdFetchSuccess","authLogout","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","statsReducer","gglReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c44ec7af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BeltButton\":\"RoundButton_BeltButton__2N8-C\",\"BeltButtonBig\":\"RoundButton_BeltButtonBig__2GXV1\",\"nameButtonBig\":\"RoundButton_nameButtonBig__2IB5M\",\"BeltChosen\":\"RoundButton_BeltChosen__3rfug\",\"BtnPressed\":\"RoundButton_BtnPressed__2zNo5\",\"NameChosen\":\"RoundButton_NameChosen__3DMEU\",\"turnOff\":\"RoundButton_turnOff__3ghr4\",\"biggerButton\":\"RoundButton_biggerButton__1BpJf\",\"White\":\"RoundButton_White__29ojb\",\"Tigertot\":\"RoundButton_Tigertot__3pR-G\",\"Yellowstr\":\"RoundButton_Yellowstr__1SbhL\",\"Yellow\":\"RoundButton_Yellow__2Hhex\",\"Greenstr\":\"RoundButton_Greenstr__3pvDd\",\"Green\":\"RoundButton_Green__3QqPh\",\"Bluestr\":\"RoundButton_Bluestr__W63-M\",\"Blue\":\"RoundButton_Blue__3nOCw\",\"Redstr\":\"RoundButton_Redstr__MwRWd\",\"Red\":\"RoundButton_Red__RogHV\",\"Blackstr\":\"RoundButton_Blackstr__2oRe3\",\"Bodon\":\"RoundButton_Bodon__14lgk\",\"Black\":\"RoundButton_Black__3K5yE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellBase\":\"Cell_cellBase__3W4sz\",\"dataCell\":\"Cell_dataCell__24yLF\",\"headerCell\":\"Cell_headerCell__3szsf\",\"title\":\"Cell_title__13E1-\",\"number\":\"Cell_number__1N98T\",\"titleCell\":\"Cell_titleCell__-AON4\",\"activityTitleCell\":\"Cell_activityTitleCell__2pxzQ\",\"activityCell\":\"Cell_activityCell__3dRR-\",\"emptyCorner\":\"Cell_emptyCorner__33AFA\",\"totalHeader\":\"Cell_totalHeader__2IPDf\",\"totalCell\":\"Cell_totalCell__FTXBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squareButton\":\"SquareButton_squareButton__2i9RD\",\"small\":\"SquareButton_small__2FOZg\",\"flat\":\"SquareButton_flat__20RFa\",\"one\":\"SquareButton_one__tZdM-\",\"two\":\"SquareButton_two__JVf6C\",\"three\":\"SquareButton_three__aGEFF\",\"transparent\":\"SquareButton_transparent__3HPzd\",\"today\":\"SquareButton_today__3Hvyd\",\"test\":\"SquareButton_test__3P9ht\",\"start\":\"SquareButton_start__D-cYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Calendar_wrapper__1IYHY\",\"calendar\":\"Calendar_calendar__2j4Ao\",\"week\":\"Calendar_week__39ByU\",\"day\":\"Calendar_day__1cOX8\",\"month\":\"Calendar_month__4vp4D\",\"contentWrapper\":\"Calendar_contentWrapper__3ef9S\",\"date\":\"Calendar_date__278Da\",\"red\":\"Calendar_red__1blOj\",\"attendance\":\"Calendar_attendance__2pSUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonalData_wrapper__2E9G5\",\"title\":\"PersonalData_title__iOgOP\",\"todayStartTest\":\"PersonalData_todayStartTest__3Sp9p\",\"name\":\"PersonalData_name__2fHAr\",\"today\":\"PersonalData_today__3WDYF\",\"start\":\"PersonalData_start__TJiKY\",\"test\":\"PersonalData_test__1rWCr\",\"threeCalendars\":\"PersonalData_threeCalendars__2MHWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classBarWrapper\":\"ClassBar_classBarWrapper__1Z4Uv\",\"classBars\":\"ClassBar_classBars__3dlP5\",\"buttonClass\":\"ClassBar_buttonClass__1e5xl\",\"buttonPink\":\"ClassBar_buttonPink__29nrF\",\"spanInButton\":\"ClassBar_spanInButton__10Vs2\",\"buttonClassPink\":\"ClassBar_buttonClassPink__1Jnfu\",\"chosenClass\":\"ClassBar_chosenClass__2wCRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Dailylog_formWrapper__3jQfw\",\"formBox\":\"Dailylog_formBox__UV2Qm\",\"labelBox\":\"Dailylog_labelBox__vrXkW\",\"inputBox\":\"Dailylog_inputBox__2cFSj\",\"submitBtn\":\"Dailylog_submitBtn__2Kfww\",\"dayLogBox\":\"Dailylog_dayLogBox__21Qo_\",\"garoLine\":\"Dailylog_garoLine__3E_z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerBox\":\"Updatemember_outerBox__2b3ur\",\"buttonBox\":\"Updatemember_buttonBox__1fpP1\",\"leftButton\":\"Updatemember_leftButton__1Lefr\",\"rightButton\":\"Updatemember_rightButton__2tVbm\",\"clicked\":\"Updatemember_clicked__mVkKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMemberBox\":\"AddNewMember_addMemberBox__3lhaq\",\"inputBox\":\"AddNewMember_inputBox__Jk7zJ\",\"selBox\":\"AddNewMember_selBox__3GciQ\",\"submitBtn\":\"AddNewMember_submitBtn__vB07e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"WeeklyLogTableTable_tableWrapper__YdUbu\",\"rowWrapper\":\"WeeklyLogTableTable_rowWrapper__3PTg8\",\"dateRow\":\"WeeklyLogTableTable_dateRow__1Bgk9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3Qshe\",\"Label\":\"Input_Label__2XWae\",\"InputElement\":\"Input_InputElement__3cM_J\",\"Invalid\":\"Input_Invalid__1yRRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NameSelect_wrapper__2wZVf\",\"personWrapper\":\"NameSelect_personWrapper__1R7k2\",\"buttonWrapper\":\"NameSelect_buttonWrapper__e0ej6\",\"buttonMain\":\"NameSelect_buttonMain__GMYeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1-wL4\",\"Success\":\"Button_Success__2zA9y\",\"Danger\":\"Button_Danger__3GUDb\",\"Submit\":\"Button_Submit__1P72-\",\"confirmName\":\"Button_confirmName__11-lY\",\"finalSubmit\":\"Button_finalSubmit__29bSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SmallClassButton_wrapper__2EY1P\",\"smallClassButton\":\"SmallClassButton_smallClassButton__1uhMZ\",\"chosenClass\":\"SmallClassButton_chosenClass__3Oz81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropdown\":\"Dropdown_Dropdown__3312i\",\"Close\":\"Dropdown_Close__1HUiu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bGround\":\"Spinner_bGround__363Rl\",\"pic\":\"Spinner_pic__-NFFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthHomeWrapper\":\"AuthHome_AuthHomeWrapper__q8zGo\",\"checkInWrapper\":\"AuthHome_checkInWrapper__1iphb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInWrapper\":\"CheckIn_checkInWrapper__1uFR-\",\"dayBar\":\"CheckIn_dayBar__7pwsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WelcomeToClass_wrapper__1TjSz\",\"text\":\"WelcomeToClass_text__5Nn7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currClass\":\"ChooseColor_currClass__1k-7j\",\"optColor\":\"ChooseColor_optColor__1Zc5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attenderBox\":\"Attender_attenderBox__28LwT\",\"buttonMain\":\"Attender_buttonMain__2Jt5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LineWrapper\":\"Line_LineWrapper__2S-_T\",\"Line\":\"Line_Line__27EOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choiceBox\":\"ShowChosenNames_choiceBox__1IY5F\",\"buttonBig\":\"ShowChosenNames_buttonBig__YlGw4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"updateWrapper\":\"UpdateBeltColor_updateWrapper__2VA4t\",\"garoLineUpdate\":\"UpdateBeltColor_garoLineUpdate__2heAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2UAww\",\"active\":\"NavigationItem_active__2RXYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1ar4p\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3O5f4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeWrapper\":\"Home_HomeWrapper__2rwku\"};","module.exports = __webpack_public_path__ + \"static/media/spinner2.f8ee3a88.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackdropBlack\":\"BackDropBlack_BackdropBlack__2rCa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"BeltSelect_wrapper__C4gbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whatday\":\"DayBar_whatday__1J0ts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3EunV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__17s71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membersWithABelt\":\"MembersWithBelt_membersWithABelt__f4MPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3ldpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"BackDrop_Backdrop__2EiU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"ModalTransparent_Modal__cjBsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"biggerBox\":\"ChooseBeltColor_biggerBox___pl5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membersWithBelt\":\"ChooseNames_membersWithBelt__35hi_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleButton\":\"ToggleButton_ToggleButton__23DxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2eoOy\"};","import React from 'react';\r\nimport classes from './Home.module.css';\r\n\r\nconst Home = () => {\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <div className={classes.HomeWrapper}>\r\n            <h1>Home</h1>\r\n            <h4>since Apr 12, 2020</h4>\r\n         </div>\r\n      </React.Fragment>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport spinner from \"./spinner2.gif\";\r\nimport classes from './Spinner.module.css'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className={classes.bGround}>\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading...\"\r\n        className={classes.pic}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND,\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axInstance from '../../shared/axios-orders';\r\n\r\nexport const authStart = () => {\r\n   return {\r\n      type: actionTypes.AUTH_START,\r\n   };\r\n};\r\n\r\nexport const authenSuccess = (idToken, userId, email) => {\r\n   return {\r\n      type: actionTypes.AUTH_SUCCESS,\r\n      idToken,\r\n      userId,\r\n      email,\r\n   };\r\n};\r\n\r\nexport const authFail = error => {\r\n   return {\r\n      type: actionTypes.AUTH_FAIL,\r\n      error: error,\r\n   };\r\n};\r\n\r\nexport const logout = () => {\r\n   return {\r\n      type: actionTypes.AUTH_LOGOUT,\r\n   };\r\n};\r\n\r\nexport const gglIdFetchSuccess = (\r\n   ggleID,\r\n   statsGglID,\r\n   location,\r\n   locationID,\r\n   lastYearGglID\r\n) => {\r\n   return {\r\n      type: actionTypes.GGL_ID_FETCH_SUCCESS,\r\n      ggleID,\r\n      statsGglID,\r\n      location,\r\n      locationID,\r\n      lastYearGglID,\r\n   };\r\n};\r\n\r\nexport const auth = (email, password) => {\r\n   return async dispatch => {\r\n      dispatch(authStart());\r\n\r\n      const authData = {\r\n         email: email,\r\n         password: password,\r\n         returnSecureToken: true,\r\n      };\r\n\r\n      const response = await axInstance.post('/auth/login', { authData });\r\n\r\n      if (response.data.error) {\r\n         dispatch(authFail(response.data.error));\r\n      } else if (response.data.message) {\r\n         dispatch(authFail({ message: response.data.message }))\r\n      }else {\r\n         const { authSuccess, fetchSuccess } = response.data;\r\n\r\n         // gglIDFetchSuccess first, because authen finish will fire the next processes right away.\r\n         dispatch(\r\n            gglIdFetchSuccess(\r\n               fetchSuccess.ggleID,\r\n               fetchSuccess.statsGglID,\r\n               fetchSuccess.location,\r\n               fetchSuccess.locationID,\r\n               fetchSuccess.lastYearGglID\r\n            )\r\n         );\r\n\r\n         dispatch(\r\n            authenSuccess(\r\n               authSuccess.idToken,\r\n               authSuccess.userId,\r\n               authSuccess.email\r\n            )\r\n         );\r\n      }\r\n   };\r\n};\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const GGL_ID_FETCH_SUCCESS = 'GGL_ID_FETCH_SUCCESS';\r\n\r\nexport const GGL_LOAD_SUCCESS = 'GGL_LOAD_SUCCESS';\r\nexport const GGL_LOAD_START = 'GGL_LOAD_START';\r\nexport const GGL_LOAD_FINISH = 'GGL_LOAD_FINISH';\r\nexport const SET_CURRENT_CLASS = 'SET_CURRENT_CLASS';\r\nexport const SET_CURRENT_BELT = 'SET_CURRENT_BELT';\r\nexport const UPDATE_PERSONS_WITH_CLASS_ATTENDER =\r\n   'UPDATE_PERSONS_WITH_CLASS_ATTENDER';\r\nexport const GGL_SAVE_START = 'GGL_SAVE_START';\r\nexport const GGL_SAVE_FINISH = 'GGL_SAVE_FINISH';\r\nexport const ADD_TO_CLASS_ATTENDER = 'ADD_TO_CLASS_ATTENDER';\r\nexport const REMOVE_FROM_CLASS_ATTENDER = 'REMOVE_FROM_CLASS_ATTENDER';\r\nexport const GGL_LOGOUT = 'GGL_LOGOUT';\r\nexport const RESET_CURRCLASS = 'RESET_CURRCLASS';\r\n\r\nexport const STAT_LOAD_SUCCESS = 'STAT_LOAD_SUCCESS';\r\nexport const STAT_LOAD_START = 'STAT_LOAD_START';\r\nexport const STAT_LOAD_FINISH = 'STAT_LOAD_FINISH';\r\nexport const STAT_SAVE_START = 'STAT_SAVE_START';\r\nexport const STAT_SAVE_FINISH = 'STAT_SAVE_FINISH';\r\nexport const SET_CURRENT_ACTIVITY = 'SET_CURRENT_ACTIVITY';\r\nexport const UPDATE_ACTIVITY = 'UPDATE_ACTIVITY';\r\nexport const SET_DAILY_STAT = 'SET_DAILY_STAT';\r\nexport const STAT_LOGOUT = 'STAT_LOGOUT';\r\nexport const INIT_ACTIVITY = 'INIT_ACTIVITY';","const days = [\r\n   'Sunday',\r\n   'Monday',\r\n   'Tuesday',\r\n   'Wednesday',\r\n   'Thursday',\r\n   'Friday',\r\n   'Saturday',\r\n];\r\n\r\nconst sixDays = [\r\n   'Monday',\r\n   'Tuesday',\r\n   'Wednesday',\r\n   'Thursday',\r\n   'Friday',\r\n   'Saturday',\r\n];\r\n\r\nconst daysShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst sixDaysShort = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst months = [\r\n   'Jan',\r\n   'Feb',\r\n   'Mar',\r\n   'Apr',\r\n   'May',\r\n   'Jun',\r\n   'Jul',\r\n   'Aug',\r\n   'Sep',\r\n   'Oct',\r\n   'Nov',\r\n   'Dev',\r\n];\r\nconst colors = [\r\n   'Tigertot',\r\n   'White',\r\n   'Yellowstr',\r\n   'Yellow',\r\n   'Greenstr',\r\n   'Green',\r\n   'Bluestr',\r\n   'Blue',\r\n   'Redstr',\r\n   'Red',\r\n   'Blackstr',\r\n   'Bodon',\r\n   'Black',\r\n];\r\n\r\nconst now = new Date();\r\nconst thisYear = now.getFullYear();\r\nconst lastYear = thisYear - 1;\r\nconst day = now.getDay(); // day=0 on Sunday.\r\nconst today = days[day];\r\n// date used for column title.\r\nconst date = now.getMonth() + 1 + '/' + now.getDate() + '/' + now.getFullYear();\r\n\r\n// dayTot : Total days.\r\nlet start = new Date(now.getFullYear(), 0, 0);\r\nlet diff = now - start;\r\nlet oneDay = 1000 * 60 * 60 * 24;\r\nlet daysTot = Math.floor(diff / oneDay);\r\n\r\n// reArrDays : rearragned days THIS YEAR\r\nconst d = new Date('1/1/' + thisYear);\r\nlet ind = d.getDay();\r\nlet reArrDays = days.slice(ind, 7).concat(days.slice(0, ind));\r\n\r\n// reArrDaysLast : rearragned days LAST YEAR\r\nconst dLast = new Date('1/1/' + lastYear);\r\nlet indLast = dLast.getDay();\r\nlet reArrDaysLast = days.slice(indLast, 7).concat(days.slice(0, indLast));\r\n\r\n// daysOfYear and daysOfYearLast\r\nconst daysOfYear = countDays(thisYear);\r\nconst daysOfYearLast = countDays(lastYear);\r\n\r\nfunction countDays(year) {\r\n   let isLeapYear = year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n   return isLeapYear ? 366 : 365;\r\n}\r\n\r\n//Days of the year\r\nconst daysOfThisYear = makeDayArray(thisYear);\r\nconst daysOfLastYear = makeDayArray(lastYear);\r\n\r\nfunction makeDayArray(year) {\r\n   let result = [];\r\n   let yS = year + '-01-02';\r\n   let yF = year + 1 + '-01-02';\r\n   let start = new Date(yS);\r\n   let finish = new Date(yF);\r\n   while (start < finish) {\r\n      const date =\r\n         start.getMonth() +\r\n         1 +\r\n         '/' +\r\n         start.getDate() +\r\n         '/' +\r\n         start.getFullYear() +\r\n         ' ' +\r\n         daysShort[start.getDay()];\r\n      result.push(date);\r\n      start.setDate(start.getDate() + 1);\r\n   }\r\n   return result;\r\n}\r\n\r\n//!!!!!!!!!!!!!! const now = new Date();\r\n//!!!!!!!!!!!!!! This CURRENT date-time changes as setDate function is called.\r\n\r\n// Obtaining the days of the week with a specific Day(herein, current)\r\n// \"\"\"4/2/2020 Monday\"\"\"\r\nfunction makeDateString(current) {\r\n   return (\r\n      current.getMonth() +\r\n      1 +\r\n      '/' +\r\n      current.getDate() +\r\n      '/' +\r\n      current.getFullYear() +\r\n      ' ' +\r\n      days[current.getDay()]\r\n   );\r\n}\r\n\r\nfunction makeDateStringNoDay(current) {\r\n   return (\r\n      current.getMonth() +\r\n      1 +\r\n      '/' +\r\n      current.getDate() +\r\n      '/' +\r\n      current.getFullYear()\r\n   );\r\n}\r\n\r\nfunction weekDates(current) {\r\n   let week = [];\r\n   // Starting Monday not Sunday So, MTWTFS .  NO SAUNDAY is included. //\r\n   // On Sunday, coming M-S are listed.\r\n   current.setDate(current.getDate() - current.getDay() + 1);\r\n   for (let i = 0; i < 6; i++) {\r\n      week.push(makeDateString(current));\r\n      current.setDate(current.getDate() + 1);\r\n   }\r\n   return week;\r\n}\r\n\r\nfunction makeDateList(howManyDaysBefore) {\r\n   let dateList = []; // It includes today as well. ( 14 * 6 - 1 ) = 83days.\r\n   let current = new Date();\r\n\r\n   current.setDate(current.getDate() - howManyDaysBefore);\r\n   for (let i = howManyDaysBefore; i >= 0; i--) {\r\n      dateList.push(makeDateStringNoDay(current));\r\n      current.setDate(current.getDate() + 1);\r\n   }\r\n\r\n   return dateList;\r\n}\r\n\r\nfunction makeMonthlyDataList() {\r\n   let attendance = []; // data list to return.\r\n\r\n   for (let i = 2; i >= 0; i--) {\r\n      let id = 0;\r\n      let monthlyList = [];\r\n      let now = new Date();\r\n      // now is set to the first day of i months prior.\r\n      now.setMonth(now.getMonth() - i);\r\n      now.setDate(1);\r\n      let month = now.getMonth();\r\n\r\n      if (now.getDay() !== 0) {\r\n         // if not Sunday, set it to Sunday.\r\n         now.setDate(now.getDate() - now.getDay());\r\n      }\r\n      while (true) {\r\n         if (now.getMonth() === month) {\r\n            monthlyList.push({\r\n               id,\r\n               date: makeDateStringNoDay(now),\r\n               day: days[now.getDay()],\r\n               attendance: [],\r\n               needDataFetch: true,\r\n               test: false,\r\n               start: false,\r\n            });\r\n            id++;\r\n         } else if (now.getMonth() < month ) {\r\n            // for last days of prev month.\r\n            monthlyList.push({\r\n               id,\r\n               date: makeDateStringNoDay(now),\r\n               day: days[now.getDay()],\r\n               attendance: [],\r\n               needDataFetch: false,\r\n               test: false,\r\n               start: false,\r\n            });\r\n            id++;\r\n         } else if (now.getDay() !== 0) {\r\n            monthlyList.push({\r\n               id,\r\n               date: makeDateStringNoDay(now),\r\n               day: days[now.getDay()],\r\n               attendance: [],\r\n               needDataFetch: false,\r\n               test: false,\r\n               start: false,\r\n            });\r\n            id++;\r\n         } else break;\r\n         now.setDate(now.getDate() + 1);\r\n      }\r\n      attendance.push([months[month], monthlyList]); // 3-letter month.\r\n   }\r\n   return attendance;\r\n}\r\n\r\nexport {\r\n   sixDays,\r\n   sixDaysShort,\r\n   day, // 0 ~ 6\r\n   today, // Sunday ~ Saturday\r\n   date,\r\n   days,\r\n   months,\r\n   colors,\r\n   thisYear,\r\n   lastYear,\r\n   daysOfYear,\r\n   daysOfYearLast,\r\n   daysShort,\r\n   reArrDays,\r\n   reArrDaysLast,\r\n   daysTot,\r\n   daysOfThisYear,\r\n   daysOfLastYear,\r\n   weekDates, //Function!!\r\n   makeDateList,\r\n   makeMonthlyDataList,\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport { today } from '../../shared/refData';\r\nimport axInstance from '../../shared/axios-orders';\r\n\r\nexport const gglLoadStart = () => {\r\n   return { type: actionTypes.GGL_LOAD_START };\r\n};\r\n\r\nexport const gglLoadFinish = () => {\r\n   return { type: actionTypes.GGL_LOAD_FINISH };\r\n};\r\n\r\nexport const gglLoadSuccess = doc => {\r\n   return { type: actionTypes.GGL_LOAD_SUCCESS, ...doc };\r\n};\r\n\r\nexport const gglSaveStart = () => {\r\n   return { type: actionTypes.GGL_SAVE_START };\r\n};\r\n\r\nexport const gglSaveFinish = () => {\r\n   return { type: actionTypes.GGL_SAVE_FINISH };\r\n};\r\n\r\nexport const whenClassClicked = cl => {\r\n   return {\r\n      type: actionTypes.SET_CURRENT_CLASS,\r\n      currClass: cl,\r\n   };\r\n};\r\n\r\nexport const whenBeltClicked = belt => {\r\n   return {\r\n      type: actionTypes.SET_CURRENT_BELT,\r\n      currBelt: belt,\r\n   };\r\n};\r\n\r\nexport const whenAttenderNameClicked = id => {\r\n   return {\r\n      type: actionTypes.REMOVE_FROM_CLASS_ATTENDER,\r\n      id: id,\r\n   };\r\n};\r\n\r\nexport const whenMemberNameClicked = id => {\r\n   return {\r\n      type: actionTypes.ADD_TO_CLASS_ATTENDER,\r\n      id: id,\r\n   };\r\n};\r\n\r\nexport const whenAttenderSubmitClicked = (ggleID, statsGglID, locationID) => {\r\n   return async dispatch => {\r\n      dispatch(gglSaveStart());\r\n      dispatch({\r\n         type: actionTypes.UPDATE_PERSONS_WITH_CLASS_ATTENDER,\r\n         ggleID,\r\n         statsGglID,\r\n         locationID,\r\n      });\r\n      dispatch(gglSaveFinish());\r\n   };\r\n};\r\n\r\nexport const saveTestee = (ggleID, testees) => {\r\n   return async dispatch => {\r\n      dispatch(gglSaveStart());\r\n      axInstance.post('/gglThisYear/save-testees', { ggleID, testees });\r\n      dispatch(gglSaveFinish());\r\n   };\r\n};\r\n\r\nexport const gglLogout = () => {\r\n   return {\r\n      type: actionTypes.GGL_LOGOUT,\r\n   };\r\n};\r\n\r\nexport const resetCurrClass = () => {\r\n   return {\r\n      type: actionTypes.RESET_CURRCLASS,\r\n   };\r\n};\r\n\r\nexport const fetchPersonalAttendance = (ggleID, lastYearGglID, fullName) => {\r\n   return async dispatch => {\r\n      dispatch(gglLoadStart);\r\n      const response = await axInstance.post(\r\n         '/gglThisYear/personal-attendance',\r\n         { ggleID, lastYearGglID, fullName }\r\n      );\r\n      const personalAttendance = response.data.personalAttendance;\r\n      dispatch(\r\n         gglLoadSuccess({\r\n            personalAttendance,\r\n         })\r\n      );\r\n      dispatch(gglLoadFinish);\r\n   };\r\n};\r\n\r\nexport const fetchGglDocs = ggleID => {\r\n   return async dispatch => {\r\n      dispatch(gglLoadStart());\r\n\r\n      const responseTable = await axInstance.post('/classTable', { ggleID });\r\n      \r\n      const { classTable, classNameTable } = responseTable.data;\r\n      const classToday = classTable[today];\r\n      // Build persons.\r\n      const responsePersons = await axInstance.post(\r\n         '/gglThisYear/init-persons',\r\n         {\r\n            ggleID,\r\n            classToday,\r\n         }\r\n      );\r\n      const { persons, classAttender } = responsePersons.data;\r\n\r\n      dispatch(\r\n         gglLoadSuccess({\r\n            persons,\r\n            classAttender,\r\n            classToday,\r\n            classTable,\r\n            classNameTable,\r\n         })\r\n      );\r\n\r\n      dispatch(gglLoadFinish());\r\n   };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axInstance from '../../shared/axios-orders';\r\n\r\nexport const statSaveStart = () => {\r\n   return { type: actionTypes.STAT_SAVE_START };\r\n};\r\n\r\nexport const statSaveFinish = () => {\r\n   return { type: actionTypes.STAT_SAVE_FINISH };\r\n};\r\n\r\nexport const statLoadStart = () => {\r\n   return { type: actionTypes.STAT_LOAD_START };\r\n};\r\n\r\nexport const statLoadFinish = () => {\r\n   return { type: actionTypes.STAT_LOAD_FINISH };\r\n};\r\n\r\nexport const statLogout = () => {\r\n   return { type: actionTypes.STAT_LOGOUT };\r\n};\r\n\r\nexport const whenActivityClicked = activity => {\r\n   return {\r\n      type: actionTypes.SET_CURRENT_ACTIVITY,\r\n      currActivity: activity,\r\n   };\r\n};\r\n\r\nexport const initActivity = () => {\r\n   return {\r\n      type: actionTypes.INIT_ACTIVITY,\r\n   };\r\n};\r\n\r\nexport const updateActivity = (currActivity, number) => {\r\n   return {\r\n      type: actionTypes.UPDATE_ACTIVITY,\r\n      currActivity,\r\n      number,\r\n   };\r\n};\r\n\r\nexport const whenActivitySubmitClicked = (statsGglID, locationID, currActivity, number) => {\r\n   return async dispatch => {\r\n      dispatch(statSaveStart());\r\n\r\n      const submitData = {\r\n         statsGglID,\r\n         locationID,\r\n         name: currActivity,\r\n         number,\r\n      };\r\n      await axInstance.post('/gglStats/submit', submitData);\r\n\r\n      dispatch(updateActivity(currActivity, number));\r\n\r\n      dispatch(statSaveFinish());\r\n   };\r\n};\r\n\r\nexport const buildStats = (dailyStat, keyList) => {\r\n   return {\r\n      type: actionTypes.STAT_LOAD_SUCCESS,\r\n      dailyStat,\r\n      keyList,\r\n   };\r\n};\r\n\r\nexport const fetchStat = (statsGglID, locationID) => {\r\n   return async dispatch => {\r\n      dispatch(statLoadStart());\r\n      // Build stats.\r\n      const response = await axInstance.post('/gglStats/init', { statsGglID, locationID });\r\n      const { dailyStat, keyList } = response.data;\r\n\r\n      dispatch(buildStats(dailyStat, keyList));\r\n      dispatch(statLoadFinish());\r\n   };\r\n};\r\n","import React from 'react';\r\nimport classes from './SquareButton.module.css';\r\n\r\nconst SquareButton = props => {\r\n   let classStr = [classes.squareButton];\r\n   if (props.size === 'small') {\r\n      classStr = [classes.small];\r\n      if (props.number === 1) {\r\n         classStr.push(classes.one);\r\n      }\r\n      if (props.number === 2) {\r\n         classStr.push(classes.two);\r\n      }\r\n      if (props.number >= 3) {\r\n         classStr.push(classes.three);\r\n      }\r\n      if (props.today) {\r\n         classStr.push(classes.today);\r\n      }\r\n      if (props.test) {\r\n         classStr.push(classes.test);\r\n      }\r\n      if (props.start) {\r\n         classStr.push(classes.start);\r\n      }\r\n      if (props.transparent) {\r\n         classStr.push(classes.transparent);\r\n      }\r\n   }\r\n\r\n   if (props.size === 'flat') {\r\n      classStr.push(classes.flat);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <button className={classStr.join(' ')} onClick={props.clicked}>\r\n            {props.children}\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SquareButton;\r\n","import React from 'react';\r\n\r\nimport classes from './BackDropBlack.module.css';\r\n\r\nconst backdropblack = (props) => (\r\n    props.show ? <div className={classes.BackdropBlack} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdropblack;","import React from 'react';\r\nimport classes from './WelcomeToClass.module.css';\r\n\r\nfunction WelcomeToClass(props) {\r\n   return (\r\n      <div className={classes.wrapper}>\r\n         Welcome to <span className={classes.text}>{props.cls}</span> class!\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default WelcomeToClass;\r\n","import React from 'react';\r\nimport classes from './RoundButton.module.css';\r\n\r\nfunction RoundButton(props) {\r\n   let classPile = [];\r\n\r\n   switch (props.type) {\r\n      case 'belt':\r\n         classPile = [classes.BeltButton, classes[props.beltColor]];\r\n         if (props.chosen) {\r\n            classPile.push(classes.BeltChosen);\r\n            // classPile.push(classes.biggerButton);\r\n         }\r\n         break;\r\n      case 'beltBig':\r\n         classPile = [classes.BeltButtonBig, classes[props.beltColor]];\r\n         if (props.chosen) {\r\n            classPile.push(classes.BeltChosen);\r\n            // classPile.push(classes.biggerButton);\r\n         }\r\n         break;\r\n      case 'name':\r\n         classPile = [classes.BeltButton, classes[props.beltColor]];\r\n         if (props.chosen) {\r\n            classPile.push(classes.NameChosen);\r\n         }\r\n         if (props.makeBiggerButton) {\r\n            classPile.push(classes.biggerButton);\r\n         }\r\n         break;\r\n      case 'nameBig':\r\n         classPile = [classes.nameButtonBig, classes[props.beltColor]];\r\n         if (props.chosen) {\r\n            classPile.push(classes.NameChosen);\r\n         }\r\n         if (props.makeBiggerButton) {\r\n            classPile.push(classes.biggerButton);\r\n         }\r\n         break;\r\n      case 'namePressed':\r\n         classPile = [\r\n            classes.BeltButton,\r\n            classes[props.beltColor],\r\n            classes.BtnPressed,\r\n         ];\r\n         break;\r\n      default:\r\n         break;\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <button className={classPile.join(' ')} onClick={props.clicked}>\r\n            {props.children}\r\n         </button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default RoundButton;\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = props => {\r\n   const classList = [classes.Button, classes[props.btnType], classes[props.showClicked]];\r\n\r\n   return (\r\n      <button\r\n         disabled={props.disabled}\r\n         className={classList.join(' ')}\r\n         onClick={props.clicked}\r\n      >\r\n         {props.children}\r\n      </button>\r\n   );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport classes from './NameSelect.module.css';\r\nimport RoundButton from '../../UI/Button/RoundButton';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass NameSelect extends Component {\r\n   state = {\r\n      id: null, // [ person.id, person.name ]\r\n      fullName: null,\r\n      beltColor: null,\r\n   };\r\n\r\n   nameChosen = (id, fullName, beltColor) => {\r\n      this.setState({ id, fullName, beltColor });\r\n   };\r\n\r\n   render() {\r\n      let attenderIdList = this.props.attender.map(per => per[1]);\r\n      let members = (\r\n         <div className={classes.personWrapper}>\r\n            {this.props.persons.map(person => (\r\n               <RoundButton\r\n                  type=\"nameBig\"\r\n                  key={person.id}\r\n                  makeBiggerButton={this.state.id === person.id ? true : false}\r\n                  chosen={\r\n                     attenderIdList.includes(person.id) ||\r\n                     this.props.currBelt !== person.belt\r\n                  }\r\n                  beltColor={person.belt}\r\n                  clicked={() =>\r\n                     this.nameChosen(person.id, person.name, person.belt)\r\n                  }\r\n               >\r\n                  {person.name.split(' ')[0]}\r\n               </RoundButton>\r\n            ))}\r\n         </div>\r\n      );\r\n\r\n      let submitButton = null;\r\n      if (\r\n         this.state.id !== null &&\r\n         this.props.currBelt === this.state.beltColor\r\n      ) {\r\n         submitButton = (\r\n            <div className={classes.buttonWrapper}>\r\n               <Button\r\n                  btnType=\"confirmName\"\r\n                  renderClickedState={true}\r\n                  clicked={() =>\r\n                     this.props.nameClicked(this.state.id, this.state.fullName)\r\n                  }\r\n               >\r\n                  {this.state.fullName}, correct?\r\n               </Button>\r\n            </div>\r\n         );\r\n      }\r\n\r\n      return (\r\n         <div className={classes.wrapper}>\r\n            {members}\r\n            {submitButton}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default NameSelect;\r\n","import React from 'react';\r\nimport classes from './BeltSelect.module.css';\r\nimport { colors } from '../../../shared/refData';\r\nimport RoundButton from '../../UI/Button/RoundButton';\r\nimport NameSelect from '../NameSelect/NameSelect';\r\n// import Announcement from './Announcement/Announcement'\r\n\r\nconst BeltSelect = props => {\r\n   let beltCollection = (\r\n      <div className={classes.wrapper}>\r\n         {colors.map(clr => (\r\n            <RoundButton\r\n               key={clr}\r\n               type=\"beltBig\"\r\n               beltColor={clr}\r\n               chosen={props.currBelt === clr}\r\n               clicked={() => props.beltClicked(clr)}\r\n            />\r\n         ))}\r\n      </div>\r\n   );\r\n\r\n   // let announcement = !props.beltState ? <Announcement /> : null;\r\n   let nameSelect = props.beltState ? (\r\n      <NameSelect\r\n         persons={props.persons}\r\n         nameClicked={props.nameClicked}\r\n         currBelt={props.currBelt}\r\n         attender={props.attender}\r\n      />\r\n   ) : null;\r\n\r\n   return (\r\n      <React.Fragment>\r\n         {beltCollection}\r\n         {nameSelect}\r\n      </React.Fragment>\r\n   );\r\n};\r\n\r\nexport default BeltSelect;\r\n","import React from 'react';\r\nimport classes from './SmallClassButton.module.css';\r\n\r\nfunction SmallClassButton(props) {\r\n   let smallClassButton = (\r\n      <div className={classes.wrapper}>\r\n         {props.classToday.map(cls => {\r\n            let classStr = [classes.smallClassButton];\r\n            if (cls[1] === '') return null;\r\n            if (cls[1] === props.currClass) classStr.push(classes.chosenClass);\r\n            return (\r\n               <button\r\n                  key={cls[1]}\r\n                  className={classStr.join(' ')}\r\n                  onClick={() => props.whenClassClicked(cls[1])}\r\n               >\r\n                  {cls[1]}\r\n               </button>\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n   return <React.Fragment>{smallClassButton}</React.Fragment>;\r\n}\r\n\r\nexport default SmallClassButton;\r\n","import React from 'react';\r\nimport SquareButton from '../../../UI/Button/SquareButton';\r\nimport classes from './Calendar.module.css';\r\nimport { daysShort, date } from '../../../../shared/refData';\r\n\r\nconst Calendar = props => {\r\n   let month = <div className={classes.month}>{props.month}</div>;\r\n   let week = (\r\n      <div className={classes.week}>\r\n         {daysShort.map(day => {\r\n            let classStr = [classes.day];\r\n            if (day === 'Sun') classStr.push(classes.red);\r\n            return (\r\n               <SquareButton key={day} size=\"flat\">\r\n                  <div className={classStr.join(' ')}>{day}</div>\r\n               </SquareButton>\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n   let calendar = (\r\n      <div className={classes.calendar}>\r\n         {props.data.map(item => {\r\n            let day = item.date.split('/')[1];\r\n            let howManyClasses = null;\r\n            let bBreakSparring = [];\r\n            let classStr = [classes.date];\r\n            if (item.day === 'Sunday') classStr.push(classes.red);\r\n            if (item.attendance) {\r\n               howManyClasses = item.attendance.length;\r\n               item.attendance.forEach(el => {\r\n                  if (el.includes('Board')) bBreakSparring.push('Board');\r\n                  if (el.includes('Spar')) bBreakSparring.push('Spar');\r\n               });\r\n            }\r\n\r\n            return (\r\n               <SquareButton\r\n                  key={item.id}\r\n                  size=\"small\"\r\n                  number={item.needDataFetch ? howManyClasses : 0}\r\n                  transparent={item.needDataFetch ? false : true}\r\n                  today={item.date === date}\r\n                  start={item.start}\r\n                  test={item.test}\r\n               >\r\n                  <div className={classes.contentWrapper}>\r\n                     <div className={classStr.join(' ')}>{day}</div>\r\n                     <div className={classes.attendance}>\r\n                        {item.needDataFetch ? bBreakSparring.join(' ') : null}\r\n                     </div>\r\n                  </div>\r\n               </SquareButton>\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n\r\n   return (\r\n      <div className={classes.wrapper}>\r\n         {month}\r\n         {week}\r\n         {calendar}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './PersonalData.module.css';\r\nimport Calendar from './Calendar/Calendar';\r\nimport { date, today } from '../../../shared/refData';\r\n\r\nconst PersonalData = props => {\r\n   let todayStartTest = (\r\n      <React.Fragment>\r\n         <div className={classes.today}>\r\n            {date} {today} (Today)\r\n         </div>\r\n         <div className={classes.start}>\r\n            Started on :{' '}\r\n            {props.persons[props.id].startedOn\r\n               ? props.persons[props.id].startedOn\r\n               : '(unavailable)'}\r\n         </div>\r\n         <div className={classes.test}>\r\n            Last tested on :{' '}\r\n            {props.persons[props.id].testedOn\r\n               ? props.persons[props.id].testedOn\r\n               : '(unavailable)'}\r\n         </div>\r\n      </React.Fragment>\r\n   );\r\n\r\n   let calendar = props.personalAttendance.map(month => (\r\n      <Calendar key={month[0]} month={month[0]} data={month[1]} />\r\n   ));\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <div className={classes.wrapper}>\r\n            <div className={classes.title}>Attendance</div>\r\n            <div className={classes.name}>\r\n               {props.persons[props.id].name}\r\n            </div>\r\n            <div className={classes.todayStartTest}>{todayStartTest}</div>\r\n            <div className={classes.threeCalendars}>{calendar}</div>\r\n            <Button\r\n               btnType=\"finalSubmit\"\r\n               renderClickedState={true}\r\n               clicked={props.whenSubmitClick}\r\n            >\r\n               Confirm\r\n            </Button>\r\n         </div>\r\n      </React.Fragment>\r\n   );\r\n};\r\n\r\nexport default PersonalData;\r\n","import React from 'react';\r\nimport { date, today } from '../../../shared/refData';\r\nimport classes from './DayBar.module.css'\r\n\r\nfunction DayBar() {\r\n   return (\r\n      <div className={classes.whatday}>\r\n         {date} {today}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DayBar;\r\n","import React, { Component } from 'react';\r\nimport classes from './CheckIn.module.css';\r\nimport WelcomeToClass from './WelcomeToClass/WelcomeToClass';\r\nimport BeltSelect from './BeltSelect/BeltSelect';\r\nimport SmallClassButton from './SmallClassButton/SmallClassButton';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport PersonalData from './PersonalData/PersonalData';\r\nimport DayBar from '../ClassBar/DayBar/DayBar';\r\n\r\nclass CheckIn extends Component {\r\n   state = {\r\n      isNameChosen: false,\r\n      classState: null,\r\n      beltState: null,\r\n      id: null,\r\n   };\r\n\r\n   nameClicked = async (id, fullName) => {\r\n      this.setState({ isNameChosen: true, id });\r\n      await this.props.whenClassClicked(this.state.classState);\r\n      await this.props.nameClicked(id);\r\n      await this.props.fetchPersonalAttendance(\r\n         this.props.ggleID,\r\n         this.props.lastYearGglID,\r\n         fullName\r\n      );\r\n   };\r\n\r\n   whenSubmitClick = async () => {\r\n      await this.props.whenSubmitClicked(\r\n         this.props.ggleID,\r\n         this.props.statsGglID,\r\n         this.props.locationID\r\n      ); // Saving the chosen attendants(inc. indivual) until now.\r\n      this.setState({ isNameChosen: false, beltState: null, id: null });\r\n   };\r\n\r\n   classStateChange = cls => {\r\n      this.setState({ classState: cls });\r\n   };\r\n\r\n   beltClicked = belt => {\r\n      this.setState({ beltState: belt });\r\n   };\r\n\r\n   render() {\r\n      let logIn = null;\r\n      if (!this.state.isNameChosen) {\r\n         logIn = (\r\n            <div className={classes.checkInWrapper}>\r\n               <div\r\n                  className={classes.dayBar}\r\n                  onClick={this.props.backToAuthHome}\r\n               >\r\n                  <DayBar />\r\n               </div>\r\n               <SmallClassButton\r\n                  whenClassClicked={cls => this.classStateChange(cls)}\r\n                  classToday={this.props.classToday}\r\n                  currClass={this.state.classState}\r\n               />\r\n               {this.state.classState ? (\r\n                  <React.Fragment>\r\n                     <WelcomeToClass cls={this.state.classState} />\r\n                     <BeltSelect\r\n                        currBelt={this.state.beltState}\r\n                        beltClicked={this.beltClicked}\r\n                        nameClicked={this.nameClicked}\r\n                        persons={this.props.persons}\r\n                        beltState={this.state.beltState}\r\n                        attender={\r\n                           this.props.classAttender[this.state.classState]\r\n                        }\r\n                     />\r\n                  </React.Fragment>\r\n               ) : null}\r\n            </div>\r\n         );\r\n      }\r\n\r\n      let personalData = null;\r\n      if (this.state.isNameChosen) {\r\n         if (this.props.personalAttendance.length !== 0) {\r\n            personalData = (\r\n               <PersonalData\r\n                  personalAttendance={this.props.personalAttendance}\r\n                  whenSubmitClick={this.whenSubmitClick}\r\n                  persons={this.props.persons}\r\n                  id={this.state.id}\r\n               />\r\n            );\r\n         } else\r\n            personalData = (\r\n               <React.Fragment>\r\n                  <Spinner />\r\n                  <h3>Fetching personal attendance data...</h3>\r\n               </React.Fragment>\r\n            );\r\n      }\r\n\r\n      return (\r\n         <React.Fragment>\r\n            {logIn}\r\n            {personalData}\r\n            {this.props.saving ? <Spinner /> : null}\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default CheckIn;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\nimport classes from './AuthHome.module.css';\r\nimport SquareButton from '../../components/UI/Button/SquareButton';\r\nimport BackDropBlack from '../../components/UI/BackDrop/BackDropBlack';\r\nimport CheckIn from '../../components/CheckIn/CheckIn';\r\nimport { day } from '../../shared/refData';\r\n\r\nclass Home extends Component {\r\n   state = {\r\n      checkInScreen: false,\r\n   };\r\n\r\n   async componentDidMount() {\r\n      // dataLoaded is needed to avoid unnecessary loading after login-loading.\r\n      if (!this.props.dataLoaded && this.props.isAuthenticated && day) {\r\n         await this.props.onStats(this.props.statsGglID, this.props.locationID);\r\n         await this.props.onGgl(this.props.ggleID);\r\n      }\r\n   }\r\n\r\n   goToCheckInScreen = () => {\r\n      this.setState({ checkInScreen: true });\r\n   };\r\n\r\n   backToAuthHome = () => {\r\n      this.setState({ checkInScreen: false });\r\n   };\r\n\r\n   render() {\r\n      let checkInScreen = (\r\n         <CheckIn\r\n            currClass={this.props.currClass}\r\n            currBelt={this.props.currBelt}\r\n            classAttender={this.props.classAttender}\r\n            classToday={this.props.classToday}\r\n            persons={this.props.persons}\r\n            whenClassClicked={this.props.whenClassClicked}\r\n            nameClicked={this.props.whenNameClicked}\r\n            beltClicked={this.props.whenBeltClicked}\r\n            fetchPersonalAttendance={this.props.fetchPersonalAttendance}\r\n            personalAttendance={this.props.personalAttendance}\r\n            whenSubmitClicked={this.props.whenSubmitClicked}\r\n            saving={this.props.gglSaving}\r\n            backToAuthHome={this.backToAuthHome}\r\n            loading={this.props.gglLoading}\r\n            ggleID={this.props.ggleID}\r\n            statsGglID={this.props.statsGglID}\r\n            locationID={this.props.locationID}\r\n            lastYearGglID={this.props.lastYearGglID}\r\n         />\r\n      );\r\n\r\n      let individualCheckIn = null;\r\n      if (day) {\r\n         individualCheckIn = (\r\n            <SquareButton clicked={this.goToCheckInScreen}>\r\n               Individual check-in\r\n            </SquareButton>\r\n         );\r\n      }\r\n\r\n      let gglLoading = null;\r\n      if (this.props.statsLoading || this.props.gglLoading) {\r\n         gglLoading = <Spinner />;\r\n      }\r\n      return (\r\n         <React.Fragment>\r\n            <div className={classes.AuthHomeWrapper}>\r\n               {gglLoading}\r\n               <h1>AuthHome</h1>\r\n               <h4>since Apr 12, 2020</h4>\r\n               {individualCheckIn}\r\n               <BackDropBlack show={this.state.checkInScreen} />\r\n               <div className={classes.checkInWrapper}>\r\n                  {this.state.checkInScreen ? checkInScreen : null}\r\n               </div>\r\n            </div>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      dataLoaded: state.ggl.dataLoaded,\r\n      gglLoading: state.ggl.loading,\r\n      statsLoading: state.stats.loading,\r\n      isAuthenticated: state.auth.token !== null,\r\n      personalAttendance: state.ggl.personalAttendance,\r\n      currClass: state.ggl.currClass,\r\n      currBelt: state.ggl.currBelt,\r\n      classToday: state.ggl.classToday,\r\n      persons: state.ggl.persons,\r\n      gglSaving: state.ggl.saving,\r\n      classAttender: state.ggl.classAttender,\r\n      ggleID: state.auth.ggleID,\r\n      statsGglID: state.auth.statsGglID,\r\n      locationID: state.auth.locationID,\r\n      lastYearGglID: state.auth.lastYearGglID,\r\n      authLoading: state.auth.loading, // To avoid firing onStats before gglID's are injected.\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onGgl: ggleID => dispatch(actions.fetchGglDocs(ggleID)),\r\n      onStats: (statsGglID, locationID) =>\r\n         dispatch(actions.fetchStat(statsGglID, locationID)),\r\n      fetchPersonalAttendance: (ggleID, lastYearGglID, fullName) =>\r\n         dispatch(actions.fetchPersonalAttendance(ggleID, lastYearGglID, fullName)),\r\n      whenSubmitClicked: (ggleID, statsGglID, locationID) =>\r\n         dispatch(actions.whenAttenderSubmitClicked(ggleID, statsGglID, locationID)),\r\n      whenNameClicked: id => dispatch(actions.whenMemberNameClicked(id)),\r\n      whenBeltClicked: belt => dispatch(actions.whenBeltClicked(belt)),\r\n      whenClassClicked: cl => dispatch(actions.whenClassClicked(cl)),\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n   return {\r\n      ...oldObject,\r\n      ...updatedProperties,\r\n   };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n   let isValid = true;\r\n   if (!rules) {\r\n      return true;\r\n   }\r\n\r\n   if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n   }\r\n\r\n   if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n   }\r\n\r\n   if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n   }\r\n\r\n   if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n   }\r\n\r\n   if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n   }\r\n   return isValid;\r\n};\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Auth extends Component {\r\n   state = {\r\n      controls: {\r\n         email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'email',\r\n               placeholder: 'Mail Address',\r\n            },\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n               isEmail: true,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n         password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n               type: 'password',\r\n               placeholder: 'Password',\r\n            },\r\n            value: '',\r\n            validation: {\r\n               required: true,\r\n               minLength: 6,\r\n            },\r\n            valid: false,\r\n            touched: false,\r\n         },\r\n      },\r\n   };\r\n\r\n   onChangeHandler = (event, controlName) => {\r\n      const updatedControls = updateObject(this.state.controls, {\r\n         [controlName]: updateObject(this.state.controls[controlName], {\r\n            value: event.target.value,\r\n            valid: checkValidity(\r\n               event.target.value,\r\n               this.state.controls[controlName].validation\r\n            ),\r\n            touched: true,\r\n         }),\r\n      });\r\n      this.setState({ controls: updatedControls });\r\n   };\r\n\r\n   submitHandler = event => {\r\n      event.preventDefault();\r\n      this.props.onAuth(\r\n         this.state.controls.email.value,\r\n         this.state.controls.password.value\r\n      );\r\n   };\r\n\r\n   render() {\r\n      const formElementsArray = [];\r\n      for (let key in this.state.controls) {\r\n         formElementsArray.push({\r\n            id: key,\r\n            config: this.state.controls[key],\r\n         });\r\n      }\r\n\r\n      let form = formElementsArray.map(formElement => (\r\n         <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={event => this.onChangeHandler(event, formElement.id)}\r\n         />\r\n      ));\r\n\r\n      if (this.props.loaing) {\r\n         form = <Spinner />;\r\n      }\r\n\r\n      let errorMessage = null;\r\n\r\n      if (this.props.error) {\r\n         errorMessage = <p>{this.props.error.message}</p>;\r\n      }\r\n\r\n      let authRedirect = null;\r\n      if (this.props.isAuthenticated) {\r\n         authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n      }\r\n\r\n      return (\r\n         <div className={classes.Auth}>\r\n            {authRedirect}\r\n            {errorMessage}\r\n            {form}\r\n            <form onSubmit={this.submitHandler}>\r\n               <Button btnType=\"Success\">SUBMIT</Button>\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      loading: state.auth.loading,\r\n      error: state.auth.error,\r\n      isAuthenticated: state.auth.token !== null,\r\n      authRedirectPath: state.auth.authRedirectPath,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onAuth: (email, password) => dispatch(actions.auth(email, password)),\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React from \"react\";\r\nimport classes from \"./Loader.module.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={classes.loader}>\r\n      <h3>Loading...</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport classes from './ClassBar.module.css';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport DayBar from './DayBar/DayBar';\r\n\r\nclass ClassBar extends Component {\r\n   render() {\r\n      let classList = this.props.classToday.map((cl, index) => {\r\n         let classStr = [classes.buttonClass];\r\n         let cls = cl[1];\r\n         if (cls) {\r\n            if (cls === this.props.currClass)\r\n               classStr.push(classes.chosenClass);\r\n            return (\r\n               <button\r\n                  className={classStr.join(' ')}\r\n                  key={index}\r\n                  onClick={() => {\r\n                     this.props.clickedClass(cls);\r\n                  }}\r\n               >\r\n                  {cls}\r\n                  <span className={classes.spanInButton}>\r\n                     <strong>{this.props.classAttender[cls].length}</strong>\r\n                  </span>\r\n               </button>\r\n            );\r\n         } else {\r\n            return null;\r\n         }\r\n      });\r\n\r\n      let activityList = this.props.keyList.map((activity, index) => {\r\n         let clsName = classes.buttonClass + ' ' + classes.buttonPink;\r\n         return index < 4 ? (\r\n            <button\r\n               className={clsName}\r\n               key={activity}\r\n               onClick={() => this.props.clickedActivity(activity)}\r\n            >\r\n               {activity}\r\n               <span className={classes.spanInButton}>\r\n                  <strong>{this.props.dailyStat[activity]}</strong>\r\n               </span>\r\n            </button>\r\n         ) : null;\r\n      });\r\n\r\n      if (\r\n         this.props.classToday === undefined ||\r\n         this.props.classToday.length === 0\r\n      ) {\r\n         return <Loader />;\r\n      } else {\r\n         return (\r\n            <React.Fragment>\r\n               <div className={classes.classBarWrapper}>\r\n                  <DayBar />\r\n                  <div className={classes.classBars}>\r\n                     {classList}\r\n                     {activityList}\r\n                  </div>\r\n               </div>\r\n            </React.Fragment>\r\n         );\r\n      }\r\n   }\r\n}\r\n\r\nexport default ClassBar;\r\n","import React, { Component } from 'react';\r\nimport classes from './MembersWithBelt.module.css';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport RoundButton from '../UI/Button/RoundButton';\r\n\r\nclass MembersWithBelt extends Component {\r\n   \r\n   render() {\r\n      let attenderIdList = this.props.currClassAttender.map(el => el[1]);\r\n      let members = this.props.persons.map(person => (\r\n         <RoundButton\r\n            type=\"name\"\r\n            key={person.id}\r\n            chosen={\r\n               person.belt !== this.props.currBelt || attenderIdList.includes(person.id)\r\n            }\r\n            beltColor={person.belt}\r\n            clicked={() => this.props.clicked(person.id)}\r\n         >\r\n            {person.name.split(' ')[0]}\r\n         </RoundButton>\r\n      ));\r\n\r\n      if (this.props.persons === undefined || this.props.persons.length === 0) {\r\n         return (\r\n            <div>\r\n               <Spinner />\r\n               <Loader />\r\n            </div>\r\n         );\r\n      } else {\r\n         return (\r\n            <React.Fragment>\r\n               <div className={classes.membersWithABelt}> {members} </div>\r\n            </React.Fragment>\r\n         );\r\n      }\r\n   }\r\n}\r\n\r\nexport default MembersWithBelt;\r\n","import React, { Component } from 'react';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport classes from './ChooseColor.module.css';\r\nimport RoundButton from '../UI/Button/RoundButton';\r\nimport { colors } from '../../shared/refData';\r\nimport MembersWithBelt from '../MembersWithBelt/MembersWithBelt';\r\n\r\nclass ChooseColor extends Component {\r\n\r\n   render() {\r\n\r\n      let currClass = (\r\n         <div className={classes.currClass}>\r\n            <h5>{this.props.currClass}</h5>\r\n         </div>\r\n      )\r\n      \r\n      let beltList = (\r\n         <div className={classes.optColor}>\r\n            {colors.map((belt, index) => {\r\n               return (\r\n                  <RoundButton\r\n                     type=\"belt\"\r\n                     key={index}\r\n                     beltColor={belt}\r\n                     chosen={this.props.currBelt === belt}\r\n                     clicked={() => this.props.clickedBelt(belt)}\r\n                  >\r\n                  </RoundButton>\r\n               );\r\n            })}\r\n         </div>\r\n      );\r\n\r\n      if (this.props.persons === undefined || this.props.persons.length === 0) {\r\n         return <Loader />;\r\n      } else {\r\n         return (\r\n            <React.Fragment>\r\n               {currClass}\r\n               {beltList}\r\n               <MembersWithBelt\r\n                  persons={this.props.persons}\r\n                  currClassAttender={this.props.currClassAttender}\r\n                  currBelt={this.props.currBelt}\r\n                  clicked={this.props.clickedMember}\r\n               />\r\n            </React.Fragment>\r\n         );\r\n      }\r\n   }\r\n}\r\n\r\nexport default ChooseColor;\r\n","import React, { Component } from 'react';\r\nimport RoundButton from '../UI/Button/RoundButton';\r\nimport Loader from '../UI/Loader/Loader';\r\nimport classes from './Attender.module.css';\r\n\r\nclass Attender extends Component {\r\n   render() {\r\n      let attenders = this.props.currClassAttender.map(attender => (\r\n         <RoundButton\r\n            type=\"namePressed\"\r\n            key={attender[1]}\r\n            beltColor={attender[0]}\r\n            clicked={() => this.props.clickedAttender(attender[1])}\r\n         >\r\n            {this.props.persons[attender[1]].name.split(' ')[0]}\r\n         </RoundButton>\r\n      ));\r\n\r\n      let submitButton = (\r\n         <button\r\n            className={classes.buttonMain}\r\n            type=\"button\"\r\n            onClick={() =>\r\n               this.props.clickedSubmit(\r\n                  this.props.ggleID,\r\n                  this.props.statsGglID,\r\n                  this.props.locationID\r\n               )\r\n            }\r\n         >\r\n            <span style={{ fontSize: '23px', color: 'black' }}>\r\n               <strong>{this.props.currClassAttender.length}</strong>\r\n            </span>\r\n            <span style={{ fontSize: '15px' }}>{this.props.currClass}</span>\r\n         </button>\r\n      );\r\n\r\n      if (this.props.persons === undefined || this.props.persons.length === 0) {\r\n         return <Loader />;\r\n      } else {\r\n         return (\r\n            <React.Fragment>\r\n               <div className={classes.attenderBox}>\r\n                  {attenders}\r\n                  {submitButton}\r\n               </div>\r\n            </React.Fragment>\r\n         );\r\n      }\r\n   }\r\n}\r\n\r\nexport default Attender;\r\n","import React from 'react';\r\n\r\nimport classes from './BackDrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../BackDrop/BackDrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.clicked}/>\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\n\r\nimport classes from './ModalTransparent.module.css';\r\nimport Backdrop from '../BackDrop/BackDrop';\r\n\r\nclass ModalTransparent extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.clicked}/>\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalTransparent;","import React from 'react';\r\nimport classes from './Line.module.css';\r\n\r\nfunction Line() {\r\n   return (\r\n      <div className={classes.LineWrapper}>\r\n         <div className={classes.Line}></div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Line;\r\n","import React, { Component } from 'react';\r\nimport classes from './Dailylog.module.css';\r\nimport ClassBar from '../../components/ClassBar/ClassBar';\r\nimport ChooseColor from '../../components/ChooseColor/ChooseColor';\r\nimport Attender from '../../components/Attender/Attender';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport ModalTransparent from '../../components/UI/Modal/ModalTransparent';\r\nimport Line from '../../components/UI/Line/Line';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Dailylog extends Component {\r\n   state = {\r\n      number: 0,\r\n   };\r\n\r\n   whenActivityClicked = activity => {\r\n      this.setState({ number: this.props.dailyStat[activity] });\r\n      this.props.clickedActivity(activity);\r\n   };\r\n   changeState = event => {\r\n      this.setState({ number: event.target.value });\r\n   };\r\n\r\n   submitHandler = event => {\r\n      event.preventDefault();\r\n      this.props.clickedActivitySubmit(\r\n         this.props.statsGglID,\r\n         this.props.locationID,\r\n         this.props.currActivity,\r\n         this.state.number\r\n      );\r\n   };\r\n\r\n   render() {\r\n      let activitySaving = null;\r\n      if (this.props.statsSaving) {\r\n         activitySaving = <Spinner />;\r\n      }\r\n\r\n      let classSaving = null;\r\n      if (this.props.gglSaving) {\r\n         classSaving = <Spinner />;\r\n      }\r\n\r\n      const clickedAttenderSubmit = () => {\r\n         if (!this.props.attenderTouched) {\r\n            this.props.resetCurrClass();\r\n         } else {\r\n            alert('Contents modified. Press submit button before leaving.');\r\n         }\r\n      };\r\n\r\n      const initActivity = () => {\r\n         this.setState({\r\n            number: this.props.dailyStat[this.props.currActivity],\r\n         });\r\n         this.props.initActivity();\r\n      };\r\n\r\n      let classBar = (\r\n         <ClassBar\r\n            classToday={this.props.classToday}\r\n            currClass={this.props.currClass}\r\n            clickedClass={this.props.clickedClass}\r\n            classAttender={this.props.classAttender}\r\n            dailyStat={this.props.dailyStat}\r\n            keyList={this.props.keyList}\r\n            clickedActivity={this.whenActivityClicked}\r\n         />\r\n      );\r\n\r\n      let showChooseColor = (\r\n         <ChooseColor\r\n            currBelt={this.props.currBelt}\r\n            persons={this.props.persons}\r\n            currClassAttender={this.props.classAttender[this.props.currClass]}\r\n            clickedMember={this.props.clickedMember}\r\n            clickedBelt={this.props.clickedBelt}\r\n            currClass={this.props.currClass}\r\n         />\r\n      );\r\n      let showAttender = (\r\n         <Attender\r\n            currClass={this.props.currClass}\r\n            currClassAttender={this.props.classAttender[this.props.currClass]}\r\n            persons={this.props.persons}\r\n            clickedAttender={this.props.clickedAttender}\r\n            clickedSubmit={this.props.clickedAttenderSubmit}\r\n            ggleID={this.props.ggleID}\r\n            statsGglID={this.props.statsGglID}\r\n            locationID={this.props.locationID}\r\n         />\r\n      );\r\n\r\n      let showForm = (\r\n         <div className={classes.formWrapper}>\r\n            <form className={classes.formBox} onSubmit={this.submitHandler}>\r\n               <div className={classes.labelBox}>{this.props.currActivity}</div>\r\n               <div className={classes.inputBox}>\r\n                  <input\r\n                     key={this.props.currActivity}\r\n                     value={this.state.number}\r\n                     name={this.props.currActivity}\r\n                     onChange={this.changeState}\r\n                     autoComplete=\"off\"\r\n                  />\r\n               </div>\r\n               <input\r\n                  className={classes.submitBtn}\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n               />\r\n            </form>\r\n         </div>\r\n      );\r\n\r\n      return (\r\n         <React.Fragment>\r\n            <div className={classes.dayLogBox}>\r\n               {classBar}\r\n               <Modal\r\n                  show={this.props.currClass && !this.props.gglSaving}\r\n                  clicked={clickedAttenderSubmit}\r\n               >\r\n                  {this.props.currClass ? showChooseColor : null}\r\n                  <Line />\r\n                  {this.props.currClass ? showAttender : null}\r\n               </Modal>\r\n               {classSaving}\r\n               <ModalTransparent\r\n                  show={this.props.currActivity && !this.props.statsSaving}\r\n                  clicked={initActivity}\r\n               >\r\n                  {this.props.currActivity && !this.props.statsSaving\r\n                     ? showForm\r\n                     : null}\r\n               </ModalTransparent>\r\n               {activitySaving}\r\n            </div>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      currClass: state.ggl.currClass,\r\n      currBelt: state.ggl.currBelt,\r\n      classToday: state.ggl.classToday,\r\n      classAttender: state.ggl.classAttender,\r\n      currClassID: state.ggl.currClassID,\r\n      persons: state.ggl.persons,\r\n      gglSaving: state.ggl.saving,\r\n      attenderTouched: state.ggl.attenderTouched,\r\n      dailyStat: state.stats.dailyStat,\r\n      currActivity: state.stats.currActivity,\r\n      keyList: state.stats.keyList,\r\n      statsSaving: state.stats.saving,\r\n      ggleID: state.auth.ggleID,\r\n      statsGglID: state.auth.statsGglID,\r\n      locationID: state.auth.locationID,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      resetCurrClass: () => dispatch(actions.resetCurrClass()),\r\n      clickedClass: cl => dispatch(actions.whenClassClicked(cl)),\r\n      clickedAttender: id => dispatch(actions.whenAttenderNameClicked(id)),\r\n      clickedAttenderSubmit: (ggleID, statsGglID, locationID) =>\r\n         dispatch(\r\n            actions.whenAttenderSubmitClicked(ggleID, statsGglID, locationID)\r\n         ),\r\n      clickedBelt: belt => dispatch(actions.whenBeltClicked(belt)),\r\n      clickedMember: id => dispatch(actions.whenMemberNameClicked(id)),\r\n      clickedActivity: activity =>\r\n         dispatch(actions.whenActivityClicked(activity)),\r\n      clickedActivitySubmit: (statsGglID, locationID, currActivity, number) =>\r\n         dispatch(\r\n            actions.whenActivitySubmitClicked(\r\n               statsGglID,\r\n               locationID,\r\n               currActivity,\r\n               number\r\n            )\r\n         ),\r\n      initActivity: () => dispatch(actions.initActivity()),\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dailylog);\r\n","import React from 'react';\r\nimport classes from './Cell.module.css';\r\n\r\nfunction Cell(props) {\r\n   let cellStyle = [classes.cellBase];\r\n   if (props.type === 'titleCell') {\r\n      cellStyle.push(classes.titleCell);\r\n   }\r\n   if (props.type === 'dataCell') {\r\n      cellStyle.push(classes.dataCell);\r\n   }\r\n   if (props.type === 'headerCell') {\r\n      cellStyle.push(classes.headerCell);\r\n   }\r\n   if (props.type === 'emptyCorner') {\r\n      cellStyle.push(classes.emptyCorner);\r\n   }\r\n   if (props.type === 'activityCell') {\r\n      cellStyle.push(classes.activityCell);\r\n   }\r\n   if (props.type === 'activityTitleCell') {\r\n      cellStyle.push(classes.activityTitleCell);\r\n   }\r\n   if (props.type === 'totalHeader') {\r\n      cellStyle.push(classes.totalHeader);\r\n   }\r\n   if (props.type === 'totalCell') {\r\n      cellStyle.push(classes.totalCell);\r\n   }\r\n\r\n   return (\r\n      <div className={cellStyle.join(' ')}>\r\n         <div className={classes.title}>{props.type !== 'activityCell' ? props.title : null}</div>\r\n         <div className={classes.number}>{props.title ? props.number : null}</div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './WeeklyLogTableTable.module.css';\r\nimport { sixDays, sixDaysShort, weekDates } from '../../shared/refData';\r\nimport Cell from './Cell/Cell';\r\n\r\nconst now = new Date();\r\nconst sixDates = weekDates(now);\r\n\r\nfunction WeeklyLogTable(props) {\r\n   let dateRow = (\r\n      <div className={classes.dateRow}>\r\n         [{sixDates[0]} ~ {sixDates[5]}]\r\n      </div>\r\n   );\r\n\r\n   let headerRow = (\r\n      <div className={classes.rowWrapper}>\r\n         <Cell type=\"emptyCorner\" />\r\n         {sixDaysShort.map((day, id) => (\r\n            <Cell key={id} type=\"headerCell\" title={day} />\r\n         ))}\r\n      </div>\r\n   );\r\n\r\n   let dataTable = [];\r\n   props.keyList.forEach((key, index) =>\r\n      dataTable.push(\r\n         <div key={index} className={classes.rowWrapper}>\r\n            <Cell\r\n               type={index < 4 ? 'activityTitleCell' : 'titleCell'}\r\n               title={key}\r\n            />\r\n            {sixDays.map((day, id) => (\r\n               <Cell\r\n                  key={id}\r\n                  type={index < 4 ? 'activityCell' : 'dataCell'}\r\n                  title={props.classTable[day][index]}\r\n                  number={props.statsTable[day][index]}\r\n               />\r\n            ))}\r\n         </div>\r\n      )\r\n   );\r\n\r\n   let totalRow = (\r\n      <div className={classes.rowWrapper}>\r\n         <Cell type=\"totalHeader\" title=\"Total\" />\r\n         {sixDays.map((day, id) => {\r\n            let sum = props.statsTable[day].reduce(\r\n               (a, b) => parseInt(a) + parseInt(b),\r\n               0\r\n            );\r\n            return <Cell key={id} type=\"totalCell\" title={sum} />;\r\n         })}\r\n      </div>\r\n   );\r\n\r\n   if (props.classTable === undefined || props.statsTable === undefined)\r\n      return <Spinner />;\r\n   else {\r\n      return (\r\n         <React.Fragment>\r\n            <div className={classes.tableWrapper}>\r\n               {dateRow}\r\n               {headerRow}\r\n               {dataTable}\r\n               {totalRow}\r\n            </div>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default WeeklyLogTable;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport WeeklyLogTableTable from '../../components/WeeklyData/WeeklyLogTableTable';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport axInstance from '../../shared/axios-orders';\r\n\r\nclass Weeklylog extends Component {\r\n   state = {\r\n      statsTable: {}, // { Monday: [ [ 1, 2, 3, 0, ... ], ... ], ... }\r\n      loading: true,\r\n   };\r\n\r\n   async componentDidMount() {\r\n      const response = await axInstance.post('/gglStats/weekly-table', {\r\n         statsGglID: this.props.statsGglID,\r\n         locationID: this.props.locationID,\r\n         keyList: this.props.keyList,\r\n      });\r\n      this.setState({ statsTable: response.data.statsTable, loading: false });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <React.Fragment>\r\n            <div>\r\n               {this.state.loading ? (\r\n                  <Spinner />\r\n               ) : (\r\n                  <WeeklyLogTableTable\r\n                     keyList={this.props.keyList}\r\n                     statsTable={this.state.statsTable}\r\n                     classTable={this.props.classNameTable}\r\n                  />\r\n               )}\r\n            </div>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      // [ 'Afterschool', .... 'Class6' ]\r\n      keyList: state.stats.keyList,\r\n      // { Monday: [ 'Tiger Tot', 'White and Yellow', ... ], ... ], ... }\r\n      classNameTable: state.ggl.classNameTable,\r\n      statsGglID: state.auth.statsGglID,\r\n      locationID: state.auth.locationID,\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Weeklylog);\r\n","import React, { Component } from 'react';\r\nimport { colors } from '../../../shared/refData';\r\nimport classes from './AddNewMember.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport axInstance from '../../../shared/axios-orders';\r\n\r\nconst now = new Date();\r\nconst date = now.getMonth() + 1 + '/' + now.getDate() + '/' + now.getFullYear();\r\n\r\nclass AddNewMember extends Component {\r\n   state = {\r\n      newMember: { Name: '', Beltcolor: '' },\r\n      nameError: '',\r\n      beltError: '',\r\n   };\r\n\r\n   addToSheet = () => {\r\n      let errorName = '';\r\n      let errorBelt = '';\r\n\r\n      if (!this.state.newMember.Name) {\r\n         errorName = 'Name is needed!';\r\n      }\r\n\r\n      if (!this.state.newMember.Beltcolor) {\r\n         errorBelt = 'Choose the belt color!';\r\n      }\r\n\r\n      if (errorName || errorBelt) {\r\n         this.setState({ nameError: errorName });\r\n         this.setState({ beltError: errorBelt });\r\n      } else {\r\n         this.saveToSheet();\r\n         this.setState({ nameError: '' });\r\n         this.setState({ beltError: '' });\r\n      }\r\n   };\r\n\r\n   saveToSheet = async () => {\r\n      this.props.resetButtons('startSaving');\r\n\r\n      this.state.newMember[date] =\r\n         '!Start[' + this.state.newMember.Beltcolor + ']';\r\n      this.state.newMember.StartedOn = date;\r\n\r\n      await axInstance.post('/gglThisYear/add-new-member', {\r\n         ggleID: this.props.ggleID,\r\n         newMember: this.state.newMember,\r\n      });\r\n      // wait here to be sure that ggl sheet is updated.\r\n      await this.props.onGgl(this.props.ggleID);\r\n\r\n      this.setState({ newMember: { Name: '', Beltcolor: '' } });\r\n      this.props.resetButtons('finishSaving');\r\n   };\r\n\r\n   onChangeName = e => {\r\n      e.preventDefault();\r\n      this.setState({\r\n         newMember: { ...this.state.newMember, Name: e.target.value },\r\n      });\r\n   };\r\n\r\n   onChoiceBelt = e => {\r\n      e.preventDefault();\r\n      this.setState({\r\n         newMember: { ...this.state.newMember, Beltcolor: e.target.value },\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <React.Fragment>\r\n            <div className={classes.addMemberBox}>\r\n               <div className={classes.layerOne}>\r\n                  <input\r\n                     className={classes.inputBox}\r\n                     type=\"text\"\r\n                     onChange={this.onChangeName}\r\n                     value={this.state.newMember.Name}\r\n                     placeholder=\"Input full name!\"\r\n                  />\r\n                  <select\r\n                     className={classes.selBox}\r\n                     onChange={this.onChoiceBelt}\r\n                     value={this.state.newMember.Beltcolor}\r\n                  >\r\n                     <option>Select a belt color</option>\r\n                     {colors.map((color, index) => (\r\n                        <option key={index + 1} value={color}>\r\n                           {color}\r\n                        </option>\r\n                     ))}\r\n                  </select>\r\n               </div>\r\n\r\n               <div>\r\n                  {this.state.nameError && (\r\n                     <div style={{ color: 'red', fontSize: '18px' }}>\r\n                        * {this.state.nameError}\r\n                     </div>\r\n                  )}\r\n                  {this.state.beltError && (\r\n                     <div style={{ color: 'red', fontSize: '18px' }}>\r\n                        * {this.state.beltError}\r\n                     </div>\r\n                  )}\r\n               </div>\r\n\r\n               <div className={classes.layerTwo}>\r\n                  <button\r\n                     className={classes.submitBtn}\r\n                     onClick={this.addToSheet}\r\n                  >\r\n                     Register\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      ggleID: state.auth.ggleID,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onGgl: (ggleID) => dispatch(actions.fetchGglDocs(ggleID)),\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewMember);\r\n","import React from 'react';\r\nimport { colors } from '../../../../shared/refData';\r\nimport classes from './ChooseBeltColor.module.css';\r\nimport RoundButton from '../../../UI/Button/RoundButton';\r\n\r\nfunction ChooseBeltColor(props) {\r\n  \r\n   let beltCollection = colors.map(color => {\r\n      return (\r\n         <RoundButton\r\n            type=\"belt\"\r\n            beltColor={color}\r\n            chosen={color === props.currBeltColor}\r\n            key={color}\r\n            clicked={() => props.clicked(color)}\r\n         >\r\n            {color}\r\n         </RoundButton>\r\n      );\r\n   });\r\n\r\n   return <div className={classes.biggerBox}>{beltCollection}</div>;\r\n}\r\n\r\nexport default ChooseBeltColor;\r\n","import React from 'react';\r\nimport RoundButton from '../../../UI/Button/RoundButton';\r\nimport Loader from '../../../UI/Loader/Loader';\r\nimport classes from './ChooseNames.module.css';\r\n\r\nfunction ChooseNames(props) {\r\n   const testeesID = props.testees.map(testee => testee[1]);\r\n   let beltGroup = (\r\n      <div className={classes.membersWithBelt}>\r\n         {props.persons.map(person => {\r\n            return (\r\n               <RoundButton\r\n                  type=\"name\"\r\n                  chosen={\r\n                     person.belt !== props.currBeltColor ||\r\n                     testeesID.includes(person.id)\r\n                  }\r\n                  beltColor={person.belt}\r\n                  key={person.id}\r\n                  clicked={() => props.clicked([person.belt, person.id], 'add')}\r\n               >\r\n                  {person.name.split(' ')[0]}\r\n               </RoundButton>\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n\r\n   if (props.persons === undefined || props.persons.length === 0) {\r\n      return <Loader />;\r\n   } else {\r\n      return <React.Fragment>{beltGroup}</React.Fragment>;\r\n   }\r\n}\r\n\r\nexport default ChooseNames;\r\n","import React from 'react';\r\nimport RoundButton from '../../../UI/Button/RoundButton';\r\nimport classes from './ShowChosenNames.module.css';\r\n\r\nfunction ShowChosenNames(props) {\r\n   let testees = props.testees.map(testee => {\r\n      return (\r\n         <RoundButton\r\n            type=\"namePressed\"\r\n            key={testee[1]}\r\n            beltColor={testee[0]}\r\n            clicked={() => props.clicked(testee, 'remove')}\r\n         >\r\n            {props.persons[testee[1]].name.split(' ')[0]}\r\n         </RoundButton>\r\n      );\r\n   });\r\n\r\n   let submitButton = (\r\n      <button\r\n         className={classes.buttonBig}\r\n         type=\"button\"\r\n         onClick={props.triggerSave}\r\n      >\r\n         <span>Submit</span>\r\n      </button>\r\n   );\r\n\r\n   if (props.testees === undefined) {\r\n      return <h3>Loading...</h3>;\r\n   } else {\r\n      return (\r\n         <React.Fragment>\r\n            <div>\r\n               <div className={classes.choiceBox}>\r\n                  {testees} {submitButton}\r\n               </div>\r\n            </div>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ShowChosenNames;\r\n","import React, { Component } from 'react';\r\nimport ChooseBeltColor from './ChooseBeltColor/ChooseBeltColor';\r\nimport ChooseNames from './ChooseNames/ChooseNames';\r\nimport ShowChosenNames from './ShowChosenNames/ShowChosenNames';\r\nimport classes from './UpdateBeltColor.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport BackDrop from '../../UI/BackDrop/BackDrop';\r\n\r\nclass UpdateBeltColor extends Component {\r\n   state = {\r\n      currBeltColor: 'White',\r\n      testees: [], //[ ['BeltColor', index], ... ]\r\n   };\r\n\r\n   switchBeltColor = color => {\r\n      this.setState({ currBeltColor: color });\r\n   };\r\n\r\n   handleTestee = (testee, action) => {\r\n      let testees = this.state.testees;\r\n      if (action === 'add') {\r\n         testees.push(testee);\r\n      }\r\n      if (action === 'remove') {\r\n         testees = testees.filter(each => testee[1] !== each[1]);\r\n      }\r\n      this.setState({ testees });\r\n   };\r\n\r\n   triggerSave = async () => {\r\n      await this.props.saveTestee(this.props.ggleID, this.state.testees);\r\n      await this.props.onGgl(this.props.ggleID);\r\n      this.props.resetButtons('backHome');\r\n   };\r\n\r\n   render() {\r\n      let whileSaving = null;\r\n      if (this.props.saving || this.props.loading) {\r\n         whileSaving = <Spinner />;\r\n      }\r\n\r\n      return (\r\n         <React.Fragment>\r\n            <BackDrop\r\n               show={\r\n                  this.props.show && !this.props.saving && !this.props.loading\r\n               }\r\n               clicked={() => this.props.resetButtons('backHome')}\r\n            />\r\n            <div className={classes.updateWrapper}>\r\n               <ChooseBeltColor\r\n                  currBeltColor={this.state.currBeltColor}\r\n                  clicked={this.switchBeltColor}\r\n               />\r\n               <ChooseNames\r\n                  currBeltColor={this.state.currBeltColor}\r\n                  persons={this.props.persons}\r\n                  testees={this.state.testees}\r\n                  clicked={this.handleTestee}\r\n               />\r\n               <div className={classes.garoLineUpdate}></div>\r\n               <ShowChosenNames\r\n                  triggerSave={this.triggerSave}\r\n                  testees={this.state.testees}\r\n                  clicked={this.handleTestee}\r\n                  persons={this.props.persons}\r\n               />\r\n            </div>\r\n            {whileSaving}\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      persons: state.ggl.persons,\r\n      saving: state.ggl.saving,\r\n      loading: state.ggl.loading, // for refreshing entire data.\r\n      ggleID: state.auth.ggleID,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      saveTestee: (ggleID, testees) =>\r\n         dispatch(actions.saveTestee(ggleID, testees)),\r\n      onGgl: ggleID => dispatch(actions.fetchGglDocs(ggleID)),\r\n   };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateBeltColor);\r\n","import React, { Component } from 'react';\r\nimport classes from './Updatemember.module.css';\r\nimport AddNewMember from '../../components/Updatemember/AddNewMember/AddNewMember';\r\nimport UpdateBeltColor from '../../components/Updatemember/UpdateBeltColor/UpdateBeltColor';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport BackDrop from '../../components/UI/BackDrop/BackDrop';\r\n\r\nclass Updatemember extends Component {\r\n   state = {\r\n      left: false,\r\n      right: false,\r\n      saving: false,\r\n   };\r\n\r\n   resetButtons = opt => {\r\n      if (opt === 'startSaving') {\r\n         this.setState({ saving: true });\r\n      }\r\n      if (opt === 'finishSaving' || opt === 'backHome') {\r\n         this.setState({ right: false, left: false, saving: false });\r\n      }\r\n   };\r\n\r\n   toggleButtons = LR => {\r\n      if (LR === 'left') {\r\n         this.setState({ left: true });\r\n      } else {\r\n         this.setState({ right: true });\r\n      }\r\n   };\r\n\r\n   render() {\r\n      let leftClass =\r\n         classes.leftButton + ' ' + (this.state.left ? classes.clicked : null);\r\n      let rightClass =\r\n         classes.rightButton + ' ' + (this.state.right ? classes.clicked : null);\r\n\r\n      return (\r\n         <React.Fragment>\r\n            <div className={classes.outerBox}>\r\n               <div className={classes.buttonBox}>\r\n                  <button\r\n                     className={leftClass}\r\n                     onClick={() => this.toggleButtons('left')}\r\n                  >\r\n                     Add member\r\n                  </button>\r\n                  <button\r\n                     className={rightClass}\r\n                     onClick={() => this.toggleButtons('right')}\r\n                  >\r\n                     Update belt\r\n                  </button>\r\n               </div>\r\n               <BackDrop\r\n                  show={this.state.left && !this.state.saving}\r\n                  clicked={() => this.resetButtons('backHome')}\r\n               />\r\n               {this.state.left ? (\r\n                  <AddNewMember\r\n                     resetButtons={this.resetButtons}\r\n                     isSaving={this.state.saving}\r\n                  />\r\n               ) : null}\r\n\r\n               {this.state.right ? (\r\n                  <UpdateBeltColor show={this.state.right} resetButtons={this.resetButtons} />\r\n               ) : null}\r\n\r\n               {this.state.saving ? <Spinner /> : null}\r\n            </div>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Updatemember;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n   componentDidMount() {\r\n      this.props.onLogOut();\r\n      this.props.onLogOutGgl();\r\n      this.props.onLogOutStat();\r\n   }\r\n\r\n   render() {\r\n      return <Redirect to=\"/\" />;\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      onLogOut: () => dispatch(actions.logout()),\r\n      onLogOutGgl: () => dispatch(actions.gglLogout()),\r\n      onLogOutStat: () => dispatch(actions.statLogout()),\r\n   };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from 'react'\r\nimport classes from './ToggleButton.module.css';\r\n\r\nfunction ToggleButton(props) {\r\n  return (\r\n    <div className={classes.ToggleButton} onClick={props.dropdownToggler}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToggleButton\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./NavigationItem.module.css\"\r\n\r\nfunction NavigationItem(props) {\r\n  return (\r\n    <div>\r\n      <li className={classes.NavigationItem}>\r\n        <NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>{props.children}</NavLink>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavigationItem\r\n","import React from 'react'\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\"\r\nimport classes from \"./NavigationItems.module.css\"\r\nimport { day } from '../../../shared/refData';\r\n\r\nfunction NavigationItems(props) {\r\n  let items = (\r\n    <React.Fragment>\r\n      <NavigationItem link=\"/authHome\" exact>Home</NavigationItem>\r\n      {day? <NavigationItem link=\"/dailylog\" exact>Attendance</NavigationItem>: null}\r\n      {day? <NavigationItem link=\"/weeklylog\" exact>Week</NavigationItem>: null}\r\n      {day? <NavigationItem link=\"/updatemember\" exact>Update</NavigationItem> : null}\r\n    </React.Fragment>\r\n  )\r\n  return (\r\n    <ul className={classes.NavigationItems}>\r\n      {props.isAuth ? null : <NavigationItem link=\"/\" exact>Home</NavigationItem>}\r\n      {props.isAuth ? items : null}\r\n      {!props.isAuth ? <NavigationItem link=\"/auth\" exact>LogIn</NavigationItem> \r\n        : <NavigationItem link=\"/logout\" exact>LogOut</NavigationItem>}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default NavigationItems\r\n","import React from \"react\";\r\nimport ToggleButton from \"../Dropdown/ToggleButton\"\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\"\r\nimport classes from \"./Toolbar.module.css\"\r\n\r\nfunction Toolbar(props) {\r\n  let logo = 'TKD-manager';\r\n  if (props.location) logo = logo + ' @ ' + props.location;\r\n\r\n  return (\r\n    <div className={classes.Toolbar}>\r\n      <ToggleButton dropdownToggler={props.dropdownToggler} />\r\n      <div style={{ color: \"black\", fontWeight: \"bold\"}}>{logo}</div>\r\n      <nav className={classes.DesktopOnly}>\r\n        <NavigationItems isAuth={props.isAuth} />\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport classes from \"./Dropdown.module.css\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\n\r\nfunction Dropdown(props) {\r\n  let attachedClasses = [classes.Dropdown, classes.Close];\r\n  if (props.open) {\r\n    attachedClasses = [classes.Dropdown];\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className={attachedClasses.join(\" \")} onClick={props.dropdownCloser}>\r\n        <nav>\r\n          <NavigationItems isAuth={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport Dropdown from \"../../components/Navigation/Dropdown/Dropdown\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showDropdown: false,\r\n  };\r\n\r\n  dropdownToggler = () => {\r\n    this.setState((prevState) => {\r\n      return { showDropdown: !prevState.showDropdown };\r\n    });\r\n  };\r\n\r\n  dropdownCloser = () => {\r\n    this.setState({ showDropdown: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Toolbar\r\n          dropdownToggler={this.dropdownToggler}\r\n          isAuth={this.props.isAuthenticated}\r\n          location={this.props.location}\r\n          />\r\n        <Dropdown\r\n          isAuth={this.props.isAuthenticated}\r\n          open={this.state.showDropdown}\r\n          dropdownCloser={this.dropdownCloser}\r\n        />\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n    location: state.auth.location,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport AuthHome from \"./containers/Home/AuthHome\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\nimport Dailylog from \"./containers/DailyLog/Dailylog\";\r\nimport Weeklylog from \"./containers/Weeklylog/Weeklylog\";\r\nimport Updatemember from \"./containers/Updatemember/Updatemember\";\r\nimport Logout from \"./containers/Auth/Logout/Logout\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route exact path=\"/authHome\" component={AuthHome} />\r\n          <Route exact path=\"/dailylog\" component={() => <Dailylog />} />\r\n          <Route exact path=\"/weeklylog\" component={Weeklylog} />\r\n          <Route exact path=\"/updatemember\" component={Updatemember} />\r\n          <Route exact path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/authHome\" />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Layout>{routes}</Layout>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(App));\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n   keyList: [], // [ 'Afterschool', .... 'Class6' ]\r\n   dailyStat: {}, // { 'AfterSchool': '3', ... }\r\n   currActivity: null,\r\n   saving: false,\r\n   loading: false,\r\n   dataLoaded: false,\r\n};\r\n\r\nconst statLoadStart = (state, action) => {\r\n   return updateObject(state, { loading: true });\r\n};\r\n\r\nconst statLoadFinish = (state, action) => {\r\n   return updateObject(state, { loading: false, dataLoaded: true });\r\n};\r\n\r\nconst statLoadSuccess = (state, action) => {\r\n   delete action.type;\r\n   return updateObject(state, { ...action });\r\n};\r\n\r\nconst statLogout = (state, action) => {\r\n   return updateObject(state, initialState);\r\n};\r\n\r\nconst statSaveStart = (state, action) => {\r\n   return updateObject(state, { saving: true });\r\n};\r\n\r\nconst statSaveFinish = (state, action) => {\r\n   return updateObject(state, { saving: false });\r\n};\r\n\r\nconst resetActivity = (state, action) => {\r\n   return updateObject(state, { currActivity: null });\r\n};\r\n\r\nconst whenActivityClicked = (state, action) => {\r\n   return updateObject(state, {\r\n      currActivity: action.currActivity,\r\n   });\r\n};\r\n\r\nconst whenActivitySubmitClicked = (state, action) => {\r\n   let dailyStat = { ...state.dailyStat };\r\n   dailyStat[action.currActivity] = action.number;\r\n\r\n   return updateObject(state, {\r\n      currActivity: null,\r\n      dailyStat,\r\n   });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.STAT_LOAD_START:\r\n         return statLoadStart(state, action);\r\n      case actionTypes.STAT_LOAD_SUCCESS:\r\n         return statLoadSuccess(state, action);\r\n      case actionTypes.STAT_LOAD_FINISH:\r\n         return statLoadFinish(state, action);\r\n      case actionTypes.STAT_SAVE_START:\r\n         return statSaveStart(state, action);\r\n      case actionTypes.STAT_SAVE_FINISH:\r\n         return statSaveFinish(state, action);\r\n      case actionTypes.STAT_LOGOUT:\r\n         return statLogout(state, action);\r\n      case actionTypes.SET_CURRENT_ACTIVITY:\r\n         return whenActivityClicked(state, action);\r\n      case actionTypes.UPDATE_ACTIVITY:\r\n         return whenActivitySubmitClicked(state, action);\r\n      case actionTypes.INIT_ACTIVITY:\r\n         return resetActivity(state, action);\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\nimport axInstance from '../../shared/axios-orders';\r\n\r\nconst initialState = {\r\n   classTable: {}, // { Monday: [[ 'Class1', 'White and Yellow'], ... ], ... }\r\n   classNameTable: {}, // { Monday: [ 'Tiger Tot', 'White and Yellow', ... }\r\n   classToday: [], // [ [ 'Class1', 'Tiger Tot'], ... ]\r\n   classAttender: {}, // { y: [ [\"Black\", 109],... ], ... }\r\n   currClass: null, // 'Tiger Tot'\r\n   currClassID: null, // 'Class1'\r\n   currBelt: 'White',\r\n   persons: [], // [ { ... }, ... ]\r\n   loading: false,\r\n   saving: false,\r\n   dataLoaded: false,\r\n   error: null,\r\n   attenderTouched: false,\r\n   personalAttendance: [],\r\n};\r\n\r\nconst gglLoadStart = (state, action) => {\r\n   return updateObject(state, { loading: true });\r\n};\r\n\r\nconst gglLoadFinish = (state, action) => {\r\n   return updateObject(state, { loading: false, dataLoaded: true });\r\n};\r\n\r\nconst gglSaveStart = (state, action) => {\r\n   return updateObject(state, { saving: true });\r\n};\r\n\r\nconst gglSaveFinish = (state, action) => {\r\n   return updateObject(state, { saving: false });\r\n};\r\n\r\nconst gglLoadSuccess = (state, action) => {\r\n   delete action.type;\r\n   return updateObject(state, { ...action });\r\n};\r\n\r\nconst gglLogout = (state, action) => {\r\n   return updateObject(state, initialState);\r\n};\r\n\r\nconst resetCurrClass = (state, action) => {\r\n   return updateObject(state, { currClass: null, currClassID: null });\r\n};\r\n\r\nconst whenClassClicked = (state, action) => {\r\n   let currClassID = null;\r\n   state.classToday.forEach(cls => {\r\n      if (cls[1] === action.currClass) {\r\n         currClassID = cls[0];\r\n      }\r\n   });\r\n   return updateObject(state, {\r\n      currClass: action.currClass,\r\n      currClassID,\r\n   });\r\n};\r\n\r\nconst whenBeltClicked = (state, action) => {\r\n   return updateObject(state, { currBelt: action.currBelt });\r\n};\r\n\r\nconst whenMemberNameClicked = (state, action) => {\r\n   let attenderList = state.classAttender[state.currClass];\r\n   attenderList.push([state.persons[action.id].belt, action.id]);\r\n   return updateObject(state, {\r\n      classAttender: updateObject(state.classAttender, {\r\n         [state.currClass]: attenderList,\r\n      }),\r\n      attenderTouched: true,\r\n   });\r\n};\r\n\r\nconst whenAttenderNameClicked = (state, action) => {\r\n   let attenderList = state.classAttender[state.currClass];\r\n   for (let i in attenderList) {\r\n      if (attenderList[i][1] === action.id) {\r\n         attenderList.splice(i, 1);\r\n         break;\r\n      }\r\n   }\r\n   return updateObject(state, {\r\n      classAttender: updateObject(state.classAttender, {\r\n         [state.currClass]: attenderList,\r\n      }),\r\n      attenderTouched: true,\r\n   });\r\n};\r\n\r\nconst whenAttenderSubmitClicked = (state, action) => {\r\n   const currAttenderIdList = state.classAttender[state.currClass].map(\r\n      el => el[1]\r\n   );\r\n   // Update 'persons'.\r\n   const members = state.persons.map(person => {\r\n      let member = person;\r\n      let needGglUpdate = false;\r\n      let newAttClass = person.attClass;\r\n      let inList = currAttenderIdList.includes(person.id);\r\n      let inPerson = person.attClass.includes(state.currClass);\r\n      if (inList !== inPerson) {\r\n         if (inPerson) {\r\n            newAttClass = person.attClass.filter(el => el !== state.currClass);\r\n            needGglUpdate = true;\r\n         } else {\r\n            person.attClass.push(state.currClass);\r\n            needGglUpdate = true;\r\n         }\r\n      }\r\n      member = updateObject(person, { attClass: newAttClass, needGglUpdate });\r\n      return member;\r\n   });\r\n\r\n   // No need to be aync/await. And async with reducer func causes error\r\n   // but with .forEach( async () => ...) is absolutely fine.\r\n   axInstance.post('/gglThisYear/update-persons', { ggleID: action.ggleID, members });\r\n   axInstance.post('/gglStats/submit', {\r\n      statsGglID: action.statsGglID,\r\n      locationID: action.locationID,\r\n      name: state.currClassID,\r\n      number: currAttenderIdList.length,\r\n   });\r\n\r\n   return updateObject(state, {\r\n      persons: members,\r\n      currClass: null,\r\n      currClassID: null,\r\n      attenderTouched: false,\r\n      personalAttendance: [], // When triggered from personal check-in.\r\n   });\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.GGL_LOAD_START:\r\n         return gglLoadStart(state, action);\r\n      case actionTypes.GGL_LOAD_SUCCESS:\r\n         return gglLoadSuccess(state, action);\r\n      case actionTypes.GGL_LOAD_FINISH:\r\n         return gglLoadFinish(state, action);\r\n      case actionTypes.GGL_SAVE_START:\r\n         return gglSaveStart(state, action);\r\n      case actionTypes.GGL_SAVE_FINISH:\r\n         return gglSaveFinish(state, action);\r\n      case actionTypes.SET_CURRENT_CLASS:\r\n         return whenClassClicked(state, action);\r\n      case actionTypes.SET_CURRENT_BELT:\r\n         return whenBeltClicked(state, action);\r\n      case actionTypes.UPDATE_PERSONS_WITH_CLASS_ATTENDER:\r\n         return whenAttenderSubmitClicked(state, action);\r\n      case actionTypes.REMOVE_FROM_CLASS_ATTENDER:\r\n         return whenAttenderNameClicked(state, action);\r\n      case actionTypes.ADD_TO_CLASS_ATTENDER:\r\n         return whenMemberNameClicked(state, action);\r\n      case actionTypes.GGL_LOGOUT:\r\n         return gglLogout(state, action);\r\n      case actionTypes.RESET_CURRCLASS:\r\n         return resetCurrClass(state, action);\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n   token: null,\r\n   userId: null,\r\n   error: null,\r\n   loading: false,\r\n   authRedirectPath: '/authHome',\r\n   email: null,\r\n   ggleID: null,\r\n   statsGglID: null,\r\n   location: null,\r\n   locationID: null,\r\n   lastYearGglID: null,\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n   return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n   return updateObject(state, {\r\n      token: action.idToken,\r\n      userId: action.userId,\r\n      error: null,\r\n      email: action.email,\r\n   });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n   return updateObject(state, {\r\n      error: action.error,\r\n      loading: false,\r\n   });\r\n};\r\n\r\nconst gglIdFetchSuccess = (state, action) => {\r\n   return updateObject(state, {\r\n      ggleID: action.ggleID,\r\n      statsGglID: action.statsGglID,\r\n      location: action.location,\r\n      locationID: action.locationID,\r\n      lastYearGglID: action.lastYearGglID,\r\n      error: null,\r\n      loading: false,\r\n   });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n   return updateObject(state, {\r\n      token: null,\r\n      userId: null,\r\n      email: null,\r\n      ggleID: null,\r\n      location: null,\r\n      locationID: null,\r\n      lastYearGglID: null,\r\n   });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case actionTypes.AUTH_START:\r\n         return authStart(state, action);\r\n      case actionTypes.AUTH_SUCCESS:\r\n         return authSuccess(state, action);\r\n      case actionTypes.AUTH_FAIL:\r\n         return authFail(state, action);\r\n      case actionTypes.AUTH_LOGOUT:\r\n         return authLogout(state, action);\r\n      case actionTypes.GGL_ID_FETCH_SUCCESS:\r\n         return gglIdFetchSuccess(state, action);\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default reducer;\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport statsReducer from './reducers/stats';\r\nimport gglReducer from './reducers/ggl';\r\nimport authReducer from './reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    stats: statsReducer,\r\n    ggl: gglReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store/store';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}